0~~~~                            ~~ Monitor: a2e02d19-80d2-4548-a42a-68d117fbcc27
   2018-05-30 15h55.54.9136280 i Topic: CK.Monitoring.DispatcherSink
   2018-05-30 15h55.54.9675275   > Initializing TextFile handler (MaxCountPerFile = 20000).
   2018-05-30 15h55.54.9760124   < 
1~~~~                            ~~ Monitor: 677c7b62-f2cd-4369-9e14-e8585d3c6131
   2018-05-30 15h55.55.4506303 i Folder 'C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\TestStores' has been cleaned up.
   2018-05-30 15h55.55.7450822 i Using default connection string: Server=.;Database=master;Integrated Security=SSPI
   2018-05-30 15h55.56.9124119 i > Running DBSetup on Database:TEST_WEB_APP_AUTH, Collation:Latin1_General_100_BIN2, CompatibilityLevel:130.
   2018-05-30 15h55.56.9303765 i | > Ensuring database 'Database:TEST_WEB_APP_AUTH, Collation:Latin1_General_100_BIN2, CompatibilityLevel:130'.
   2018-05-30 15h55.57.0985649 i | <  | 1 conclusion:
                                 |    | Database already exists, collation and compatiblity level match.
   2018-05-30 15h55.57.1060525 i | > Running StObjSetup.
   2018-05-30 15h55.57.1434815 i | | No 'CKSetup/DefaultBinPaths' configuration. Using current BinFolder.
   2018-05-30 15h55.57.1993766 i | | > Running Setup on 'C:\Dev\LocalFeed\Local\CKSetupStore' for the first time.
   2018-05-30 15h55.57.1998755 i | | | No 'CKSetup/AutoRegisterLocalComponentPaths' components specified.
   2018-05-30 15h55.57.1998755 i | | < 
   2018-05-30 15h55.57.1998755 i | | Using store 'C:\Dev\LocalFeed\Local\CKSetupStore'.
   2018-05-30 15h55.57.1998755 i | | Using remote 'file:///C:/Dev/LocalFeed/Local/CKSetupStore'.
   2018-05-30 15h55.57.3635706   | | Opened store with 118 components.
   2018-05-30 15h55.57.3635706   | | Local store opened on : 'C:\Dev\LocalFeed\Local\CKSetupStore'.
   2018-05-30 15h55.57.3745510   | | > Creating client remote store on 'file:///C:/Dev/LocalFeed/Local/CKSetupStore'.
   2018-05-30 15h55.57.4119827   | | | Opened store with 118 components.
   2018-05-30 15h55.57.4119827   | | | Local store opened on : 'C:\Dev\LocalFeed\Local\CKSetupStore'.
   2018-05-30 15h55.57.4124816   | | < 
   2018-05-30 15h55.57.4134794 i | | > Running Setup.
   2018-05-30 15h55.57.4219639   | | | > Initializing SetupContext (ignoring signatures).
   2018-05-30 15h55.57.4938293 i | | | | <Root>
                                 | | | |     <CKSetup>
                                 | | | |       <BinPaths>
                                 | | | |         <BinPath>C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461</BinPath>
                                 | | | |       </BinPaths>
                                 | | | |       <Dependencies />
                                 | | | |       <EngineAssemblyQualifiedName>CK.Setup.StObjEngine, CK.StObj.Engine</EngineAssemblyQualifiedName>
                                 | | | |     </CKSetup>
                                 | | | |     <Configuration>
                                 | | | |       <AppContextAssemblyGeneratedDirectoryTarget>C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461</AppContextAssemblyGeneratedDirectoryTarget>
                                 | | | |       <GenerateSourceFiles>true</GenerateSourceFiles>
                                 | | | |       <Assemblies />
                                 | | | |       <Types />
                                 | | | |       <Aspect Type="CK.Setup.SetupableAspectConfiguration, CK.Setupable.Model" Version="1" />
                                 | | | |       <Aspect Type="CK.Setup.SqlSetupAspectConfiguration, CK.SqlServer.Setup.Model">
                                 | | | |         <Databases />
                                 | | | |         <DefaultDatabaseConnectionString>Data Source=.;Initial Catalog=TEST_WEB_APP_AUTH;Integrated Security=True</DefaultDatabaseConnectionString>
                                 | | | |         <GlobalResolution>true</GlobalResolution>
                                 | | | |       </Aspect>
                                 | | | |     </Configuration>
                                 | | | |   </Root>
   2018-05-30 15h55.57.4938293 i | | | | Configuration BasePath is empty: using current directory 'C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461'.
   2018-05-30 15h55.57.4983208 i | | | | > Reading binary folders.
   2018-05-30 15h55.57.5018140 i | | | | | > Reading files from 'C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461'.
   2018-05-30 15h55.58.0622720 i | | | | | < 
   2018-05-30 15h55.58.0632707 i | | | | <  | 1 conclusion:
                                 | | | |    | 1 folders read.
   2018-05-30 15h55.58.2399427 i | | | | Created temporary Working Directory: C:\Users\olivi\AppData\Local\Temp\CKSetup2018-05-30 15h55.58.2379462\.
   2018-05-30 15h55.58.2409405   | | | < 
   2018-05-30 15h55.58.2469301 i | | | > Resolving runtime support for 'C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461\'.
   2018-05-30 15h55.58.2499226 i | | | | > Creating runtime dependencies resolver for C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461\.
   2018-05-30 15h55.58.2584067 i | | | | | > Detecting runtimes for: CK.Setupable.Model/Net461, CK.SqlServer.Setup.Model/Net461, CK.StObj.Model/Net461
   2018-05-30 15h55.58.2988313 i | | | | | | Multiple possible runtime: Net461, Net462, Net47.
   2018-05-30 15h55.58.3013267 i | | | | | <  | 1 conclusion:
                                 | | | | |    | Lowest selected runtime: Net461.
   2018-05-30 15h55.58.3397557 i | | | | < 
   2018-05-30 15h55.58.3417518 i | | | | > Initializing root dependencies.
   2018-05-30 15h55.58.3597186   | | | | | Resolved required dependency -> CK.Setupable.Runtime/6.0.1-C0006-local to local CK.Setupable.Runtime/6.0.1-C0006-local/Net461/.
   2018-05-30 15h55.58.3632118   | | | | | Resolved required dependency -> CK.SqlServer.Setup.Runtime/6.0.1-C0006-local to local CK.SqlServer.Setup.Runtime/6.0.1-C0006-local/Net461/.
   2018-05-30 15h55.58.3632118   | | | | | Resolved required dependency -> CK.StObj.Runtime/6.0.1-C0006-local to local CK.StObj.Runtime/6.0.1-C0006-local/Net461/.
   2018-05-30 15h55.58.3632118   | | | | | Resolved required dependency -> CKSetup.Runner/6.0.1-C0008-local to local CKSetup.Runner/6.0.1-C0008-local/Net461/.
   2018-05-30 15h55.58.3667064 i | | | | < 
   2018-05-30 15h55.58.3667064 i | | | | > Resolving dependencies.
   2018-05-30 15h55.58.3677038   | | | | | Resolved required dependency -> CK.Setupable.Engine/6.0.1-C0006-local to local CK.Setupable.Engine/6.0.1-C0006-local/Net461/.
   2018-05-30 15h55.58.3687020   | | | | | Resolved required dependency -> CK.SqlServer.Setup.Engine/6.0.1-C0006-local to local CK.SqlServer.Setup.Engine/6.0.1-C0006-local/Net461/.
   2018-05-30 15h55.58.3687020   | | | | | Resolved required dependency -> CK.StObj.Engine/6.0.1-C0006-local to local CK.StObj.Engine/6.0.1-C0006-local/Net461/.
   2018-05-30 15h55.58.3687020 i | | | | < 
   2018-05-30 15h55.58.3766890 i | | | | > Selected 129 setup files.
   2018-05-30 15h55.58.4076295 i | | | | < 
   2018-05-30 15h55.58.4076295 i | | | < 
   2018-05-30 15h55.58.4076295 i | | | > Copying files to 'C:\Users\olivi\AppData\Local\Temp\CKSetup2018-05-30 15h55.58.2379462\'.
   2018-05-30 15h56.01.0826539 i | | | < 
   2018-05-30 15h56.01.0831542 i | | | > Copying 192 files from bin folders.
   2018-05-30 15h56.03.2012156 i | | | <  | 1 conclusion:
                                 | | |    | Skipped 107 file(s).
   2018-05-30 15h56.03.2012156 i | | | > Generating CKSetup.Runner.Config.xml file.
   2018-05-30 15h56.03.2536166 i | | | < 
   2018-05-30 15h56.03.2551147 i | | | > Launching CKSetup.Runner process.
   2018-05-30 15h56.03.2795690   | | | | > C:\Users\olivi\AppData\Local\Temp\CKSetup2018-05-30 15h55.58.2379462\CKSetup.Runner.exe  /silent /logPipe:2688
   2018-05-30 15h56.03.5126360 i | | | | | > Starting CKSetup.Runner - 6.0.1--ci.8.local (6.0.1-C0008-local) - SHA1: 6138daf7e47b13471540c681d64f4ce7e2f40cf6 - CommitDate: 2018-05-30 14:53:53Z
   2018-05-30 15h56.03.5780134 i | | | | | | > Applying CKSetup configuration.
   2018-05-30 15h56.03.5805088 i | | | | | | | Handling 1 BinPath(s).
   2018-05-30 15h56.03.5820060 i | | | | | | < 
   2018-05-30 15h56.03.5929881 i | | | | | | > Validating configuration.
   2018-05-30 15h56.03.6024678 i | | | | | | < 
   2018-05-30 15h56.03.6234316   | | | | | | > Creating and configuring 2 aspect(s).
   2018-05-30 15h56.03.6828186   | | | | | | | > Configuring aspect 'CK.Setup.SetupableAspect'.
   2018-05-30 15h56.03.6848147   | | | | | | | < 
   2018-05-30 15h56.03.6957959   | | | | | | | > Configuring aspect 'CK.SqlServer.Setup.SqlSetupAspect'.
   2018-05-30 15h56.03.7127605 i | | | | | | | | > Connection to Data Source=.;Initial Catalog=TEST_WEB_APP_AUTH;Integrated Security=True.
   2018-05-30 15h56.03.7865988 i | | | | | | | | | Connected to database.
   2018-05-30 15h56.03.7875877 i | | | | | | | | < 
   2018-05-30 15h56.03.7885837 i | | | | | | | | Registering SqlVersionedItemReader on the default database as the version reader.
   2018-05-30 15h56.03.7905896 i | | | | | | | | Registering SqlVersionedItemWriter on the default database as the version writer.
   2018-05-30 15h56.03.7905896 i | | | | | | | | Registering SqlSetupSessionMemoryProvider on the default database as the memory provider.
   2018-05-30 15h56.03.8829079   | | | | | | | < 
   2018-05-30 15h56.03.8839057 i | | | | | | | > Executing initial 1 deferred actions.
   2018-05-30 15h56.03.8849039 i | | | | | | | <  | 1 conclusion:
                                 | | | | | | |    | Executed 1 actions.
   2018-05-30 15h56.03.8893954 i | | | | | | | No explicit ISimpleObjectActivator has been registered. Using a default SimpleObjectActivator.
   2018-05-30 15h56.03.8893954   | | | | | | < 
   2018-05-30 15h56.03.8929047 i | | | | | | > Building StObj objects.
   2018-05-30 15h56.03.9356284 i | | | | | | | > Registering StObj types.
   2018-05-30 15h56.03.9366271   | | | | | | | | > Registering 16 assemblies.
   2018-05-30 15h56.03.9366271   | | | | | | | | | > Registering assembly 'CK.Setupable.Model'.
   2018-05-30 15h56.03.9396205   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 16 types(s) registered.
   2018-05-30 15h56.03.9401203   | | | | | | | | | > Registering assembly 'CK.SqlServer.Setup.Model'.
   2018-05-30 15h56.03.9650584   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 43 types(s) registered.
   2018-05-30 15h56.03.9650584   | | | | | | | | | > Registering assembly 'CK.StObj.Model'.
   2018-05-30 15h56.03.9675543   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 22 types(s) registered.
   2018-05-30 15h56.03.9675543   | | | | | | | | | > Registering assembly 'CK.DB.Actor'.
   2018-05-30 15h56.03.9770384   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 6 types(s) registered.
   2018-05-30 15h56.03.9770384   | | | | | | | | | > Registering assembly 'CK.DB.AspNet.Auth'.
   2018-05-30 15h56.03.9875163   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 8 types(s) registered.
   2018-05-30 15h56.03.9875163   | | | | | | | | | > Registering assembly 'CK.DB.AspNet'.
   2018-05-30 15h56.03.9895128   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 3 types(s) registered.
   2018-05-30 15h56.03.9895128   | | | | | | | | | > Registering assembly 'CK.DB.Auth'.
   2018-05-30 15h56.03.9920104   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 13 types(s) registered.
   2018-05-30 15h56.03.9920104   | | | | | | | | | > Registering assembly 'CK.DB.Tests.NUnit'.
   2018-05-30 15h56.03.9940194   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 8 types(s) registered.
   2018-05-30 15h56.03.9940194   | | | | | | | | | > Registering assembly 'CK.DB.User.UserGoogle'.
   2018-05-30 15h56.03.9969995   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 7 types(s) registered.
   2018-05-30 15h56.03.9969995   | | | | | | | | | > Registering assembly 'CK.DB.User.UserOidc'.
   2018-05-30 15h56.04.0014936   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 8 types(s) registered.
   2018-05-30 15h56.04.0014936   | | | | | | | | | > Registering assembly 'CK.DB.User.UserPassword'.
   2018-05-30 15h56.04.0050007   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 5 types(s) registered.
   2018-05-30 15h56.04.0050007   | | | | | | | | | > Registering assembly 'CK.Testing.DBSetup'.
   2018-05-30 15h56.04.0319937   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 2 types(s) registered.
   2018-05-30 15h56.04.0324810   | | | | | | | | | > Registering assembly 'CK.Testing.SetupableSetup'.
   2018-05-30 15h56.04.0329920   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 2 types(s) registered.
   2018-05-30 15h56.04.0329920   | | | | | | | | | > Registering assembly 'CK.Testing.StObjMap'.
   2018-05-30 15h56.04.0334909   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 2 types(s) registered.
   2018-05-30 15h56.04.0334909   | | | | | | | | | > Registering assembly 'CK.Testing.StObjSetup'.
   2018-05-30 15h56.04.0339902   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 5 types(s) registered.
   2018-05-30 15h56.04.0339902   | | | | | | | | | > Registering assembly 'WebApp.Tests'.
   2018-05-30 15h56.04.0631172   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 33 types(s) registered.
   2018-05-30 15h56.04.0631172   | | | | | | | | < 
   2018-05-30 15h56.04.0651133   | | | | | | | | > Explicitely registering 0 type(s).
   2018-05-30 15h56.04.0651133   | | | | | | | | < 
   2018-05-30 15h56.04.0666105 i | | | | | | | < 
   2018-05-30 15h56.04.0666105 i | | | | | | | > Resolving StObj dependency graph.
   2018-05-30 15h56.04.0706026 i | | | | | | | | > Collecting all StObj information.
   2018-05-30 15h56.04.0706026 i | | | | | | | | | > Collecting Ambient Contracts, Type structure and Poco.
   2018-05-30 15h56.04.0735969 i | | | | | | | | | | > Creating Poco Types and PocoFactory.
   2018-05-30 15h56.04.1553168 i | | | | | | | | | | < 
   2018-05-30 15h56.04.2411762   | | | | | | | | | | > Ambient Contract discovering: 1 context(s).
   2018-05-30 15h56.04.2461670   | | | | | | | | | | | > Ambient Contract for context '': 25 mappings for 15 concrete paths.
   2018-05-30 15h56.04.2466668   | | | | | | | | | | | < 
   2018-05-30 15h56.04.2466668   | | | | | | | | | | < 
   2018-05-30 15h56.04.2466668 i | | | | | | | | | < 
   2018-05-30 15h56.04.2536528 i | | | | | | | | | > Creating Structure Objects.
   2018-05-30 15h56.04.2541526 i | | | | | | | | | | > Working on Context [].
   2018-05-30 15h56.04.2975715 i | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | |    | 15 items created for 15 types.
   2018-05-30 15h56.04.2980704 i | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | 15 items created.
   2018-05-30 15h56.04.2980704 i | | | | | | | | | > Handling dependencies.
   2018-05-30 15h56.04.2990687 i | | | | | | | | | | > Working on Context [].
   2018-05-30 15h56.04.3025628   | | | | | | | | | | | > Preparing '[]CK.SqlServer.Setup.SqlDefaultDatabase'.
   2018-05-30 15h56.04.3155384   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Group
   2018-05-30 15h56.04.3155384   | | | | | | | | | | | > Preparing '[]CK.DB.Actor.ActorProfileTable'.
   2018-05-30 15h56.04.3155384   | | | | | | | | | | | | > Preparing '[]CK.DB.Actor.Package'.
   2018-05-30 15h56.04.3165362   | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3240242   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3240242   | | | | | | | | | | | > Preparing '[]CK.DB.Actor.ActorTable'.
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | > Preparing '[]CK.DB.Actor.GroupTable'.
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | > Preparing '[]CK.DB.Actor.UserTable'.
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | > Preparing '[]CK.DB.Auth.AuthProviderTable'.
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | | > Preparing '[]CK.DB.Auth.Package'.
   2018-05-30 15h56.04.3245231   | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3250211   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3250211   | | | | | | | | | | | > Preparing '[]CK.DB.User.UserGoogle.Package'.
   2018-05-30 15h56.04.3250211   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3250211   | | | | | | | | | | | > Preparing '[]CK.DB.User.UserGoogle.UserGoogleTable'.
   2018-05-30 15h56.04.3250211   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | > Preparing '[]CK.DB.User.UserOidc.Package'.
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | > Preparing '[]CK.DB.User.UserOidc.UserOidcTable'.
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | > Preparing '[]CK.DB.User.UserPassword.Package'.
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | > Preparing '[]CK.DB.User.UserPassword.UserPasswordTable'.
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Container
   2018-05-30 15h56.04.3255218   | | | | | | | | | | | > Preparing '[]CK._g.poco.Factory'.
   2018-05-30 15h56.04.3260189 W | | | | | | | | | | | | Since ItemKind is not specified on this base class ('[]CK._g.poco.Factory'), it defaults to SimpleItem. It should be explicitely set to either SimpleItem, Group or Container.
   2018-05-30 15h56.04.3275156   | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | |    | ItemKind is Item
   2018-05-30 15h56.04.3275156 i | | | | | | | | | | < 
   2018-05-30 15h56.04.3285134 i | | | | | | | | | | > Working on Context [].
   2018-05-30 15h56.04.3399949 i | | | | | | | | | | < 
   2018-05-30 15h56.04.3864055 i | | | | | | | | | < 
   2018-05-30 15h56.04.3869049 i | | | | | | | | | > Initializing object graph.
   2018-05-30 15h56.04.3923946   | | | | | | | | | | > Constructing '[]CK._g.poco.Factory'.
   2018-05-30 15h56.04.3938918   | | | | | | | | | | < 
   2018-05-30 15h56.04.3943911   | | | | | | | | | | > Constructing '[]CK.SqlServer.Setup.SqlDefaultDatabase'.
   2018-05-30 15h56.04.3968897   | | | | | | | | | | < 
   2018-05-30 15h56.04.3973868   | | | | | | | | | | > Constructing '[]CK.DB.Actor.Package'.
   2018-05-30 15h56.04.3993829   | | | | | | | | | | < 
   2018-05-30 15h56.04.3993829   | | | | | | | | | | > Constructing '[]CK.DB.Actor.ActorTable'.
   2018-05-30 15h56.04.3993829   | | | | | | | | | | < 
   2018-05-30 15h56.04.4018783   | | | | | | | | | | > Constructing '[]CK.DB.Actor.GroupTable'.
   2018-05-30 15h56.04.4023767   | | | | | | | | | | < 
   2018-05-30 15h56.04.4023767   | | | | | | | | | | > Constructing '[]CK.DB.Actor.UserTable'.
   2018-05-30 15h56.04.4023767   | | | | | | | | | | < 
   2018-05-30 15h56.04.4023767   | | | | | | | | | | > Constructing '[]CK.DB.Actor.ActorProfileTable'.
   2018-05-30 15h56.04.4028756   | | | | | | | | | | < 
   2018-05-30 15h56.04.4028756   | | | | | | | | | | > Constructing '[]CK.DB.Auth.Package'.
   2018-05-30 15h56.04.4028756   | | | | | | | | | | < 
   2018-05-30 15h56.04.4028756   | | | | | | | | | | > Constructing '[]CK.DB.Auth.AuthProviderTable'.
   2018-05-30 15h56.04.4028756   | | | | | | | | | | < 
   2018-05-30 15h56.04.4028756   | | | | | | | | | | > Constructing '[]CK.DB.User.UserGoogle.Package'.
   2018-05-30 15h56.04.4033745   | | | | | | | | | | < 
   2018-05-30 15h56.04.4033745   | | | | | | | | | | > Constructing '[]CK.DB.User.UserOidc.Package'.
   2018-05-30 15h56.04.4033745   | | | | | | | | | | < 
   2018-05-30 15h56.04.4033745   | | | | | | | | | | > Constructing '[]CK.DB.User.UserPassword.Package'.
   2018-05-30 15h56.04.4033745   | | | | | | | | | | < 
   2018-05-30 15h56.04.4038734   | | | | | | | | | | > Constructing '[]CK.DB.User.UserGoogle.UserGoogleTable'.
   2018-05-30 15h56.04.4038734   | | | | | | | | | | < 
   2018-05-30 15h56.04.4038734   | | | | | | | | | | > Constructing '[]CK.DB.User.UserOidc.UserOidcTable'.
   2018-05-30 15h56.04.4038734   | | | | | | | | | | < 
   2018-05-30 15h56.04.4038734   | | | | | | | | | | > Constructing '[]CK.DB.User.UserPassword.UserPasswordTable'.
   2018-05-30 15h56.04.4043737   | | | | | | | | | | < 
   2018-05-30 15h56.04.4043737 i | | | | | | | | | | > Setting Ambient Contracts.
   2018-05-30 15h56.04.4053715 i | | | | | | | | | | | > Working on Context [].
   2018-05-30 15h56.04.4063689 i | | | | | | | | | | | < 
   2018-05-30 15h56.04.4063689 i | | | | | | | | | | < 
   2018-05-30 15h56.04.4063689 i | | | | | | | | | < 
   2018-05-30 15h56.04.4063689 i | | | | | | | | < 
   2018-05-30 15h56.04.4063689 i | | | | | | | < 
   2018-05-30 15h56.04.4063689 i | | | | | | < 
   2018-05-30 15h56.04.4078669 i | | | | | | > Running Aspects.
   2018-05-30 15h56.04.4078669 i | | | | | | | > Aspect: CK.Setup.SetupableAspect.
   2018-05-30 15h56.04.4108603 i | | | | | | | | > Creating Setup Items from Structured Objects.
   2018-05-30 15h56.04.4143554 i | | | | | | | | | > Building setupable items from 15 Structure Objects (calling IStObjSetupConfigurator.ConfigureDependentItem and IStObjSetupItemFactory.CreateDependentItem for each of them).
   2018-05-30 15h56.04.4532833 i | | | | | | | | | | SqlPackage 'CK.DB.Actor.Package' uses its own full name as its SetupName.
   2018-05-30 15h56.04.4767403 i | | | | | | | | | | SqlTable 'CK.DB.Actor.ActorTable' uses 'CK.ActorTable' as its SetupName.
   2018-05-30 15h56.04.4777376 i | | | | | | | | | | SqlTable 'CK.DB.Actor.GroupTable' uses 'CK.GroupTable' as its SetupName.
   2018-05-30 15h56.04.4782356 i | | | | | | | | | | SqlTable 'CK.DB.Actor.UserTable' uses 'CK.UserTable' as its SetupName.
   2018-05-30 15h56.04.4782356 i | | | | | | | | | | SqlTable 'CK.DB.Actor.ActorProfileTable' uses 'CK.ActorProfileTable' as its SetupName.
   2018-05-30 15h56.04.4787346 i | | | | | | | | | | SqlPackage 'CK.DB.Auth.Package' uses its own full name as its SetupName.
   2018-05-30 15h56.04.4792335 i | | | | | | | | | | SqlTable 'CK.DB.Auth.AuthProviderTable' uses 'CK.AuthProviderTable' as its SetupName.
   2018-05-30 15h56.04.4792335 i | | | | | | | | | | SqlPackage 'CK.DB.User.UserGoogle.Package' uses its own full name as its SetupName.
   2018-05-30 15h56.04.4797328 i | | | | | | | | | | SqlPackage 'CK.DB.User.UserOidc.Package' uses its own full name as its SetupName.
   2018-05-30 15h56.04.4797328 i | | | | | | | | | | SqlPackage 'CK.DB.User.UserPassword.Package' uses its own full name as its SetupName.
   2018-05-30 15h56.04.4802317 i | | | | | | | | | | SqlTable 'CK.DB.User.UserGoogle.UserGoogleTable' uses 'CK.UserGoogleTable' as its SetupName.
   2018-05-30 15h56.04.4802317 i | | | | | | | | | | SqlTable 'CK.DB.User.UserOidc.UserOidcTable' uses 'CK.UserOidcTable' as its SetupName.
   2018-05-30 15h56.04.4807306 i | | | | | | | | | | SqlTable 'CK.DB.User.UserPassword.UserPasswordTable' uses 'CK.UserPasswordTable' as its SetupName.
   2018-05-30 15h56.04.4807306 i | | | | | | | | | < 
   2018-05-30 15h56.04.4827267 i | | | | | | | | | > Binding dependencies between Setupable items.
   2018-05-30 15h56.04.4857210 i | | | | | | | | | < 
   2018-05-30 15h56.04.4872186 i | | | | | | | | | > Dynamic initialization of Setup items.
   2018-05-30 15h56.04.5091793 i | | | | | | | | | | > Executing 45 deferred actions.
   2018-05-30 15h56.04.5096773 i | | | | | | | | | | | > Starting intialization round n°0.
   2018-05-30 15h56.04.5136713 i | | | | | | | | | | | | > Handling: '[]db^CK.sActorCreate' in SqlObjectItem attribute of '[]db^CK.ActorTable'
   2018-05-30 15h56.04.5151684   | | | | | | | | | | | | | > Loading '[]db^CK.sActorCreate' of '[]db^CK.ActorTable'.
   2018-05-30 15h56.04.7148837   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sActorCreate.sql'.
   2018-05-30 15h56.04.7148837 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.7148837 i | | | | | | | | | | | | > Handling: '[]db^CK.vGroup' in SqlObjectItem attribute of '[]db^CK.GroupTable'
   2018-05-30 15h56.04.7148837   | | | | | | | | | | | | | > Loading '[]db^CK.vGroup' of '[]db^CK.GroupTable'.
   2018-05-30 15h56.04.7627915   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded View from file 'vGroup.sql'.
   2018-05-30 15h56.04.7632908 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.7647880 i | | | | | | | | | | | | > Handling: 'sGroupCreate' in 'CreateGroupAsync' SqlProcedure attribute of '[]db^CK.GroupTable'
   2018-05-30 15h56.04.7652873   | | | | | | | | | | | | | > Loading '[]db^CK.sGroupCreate' of '[]db^CK.GroupTable'.
   2018-05-30 15h56.04.7822554   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sGroupCreate.sql'.
   2018-05-30 15h56.04.7822554 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.7822554 i | | | | | | | | | | | | > Handling: 'sGroupDestroy' in 'DestroyGroupAsync' SqlProcedure attribute of '[]db^CK.GroupTable'
   2018-05-30 15h56.04.7822554   | | | | | | | | | | | | | > Loading '[]db^CK.sGroupDestroy' of '[]db^CK.GroupTable'.
   2018-05-30 15h56.04.7897444   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sGroupDestroy.sql'.
   2018-05-30 15h56.04.7897444 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.7897444 i | | | | | | | | | | | | > Handling: 'sGroupUserAdd' in 'AddUserAsync' SqlProcedure attribute of '[]db^CK.GroupTable'
   2018-05-30 15h56.04.7897444   | | | | | | | | | | | | | > Loading '[]db^CK.sGroupUserAdd' of '[]db^CK.GroupTable'.
   2018-05-30 15h56.04.7932349   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sGroupUserAdd.sql'.
   2018-05-30 15h56.04.7932349 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.7932349 i | | | | | | | | | | | | > Handling: 'sGroupUserRemove' in 'RemoveUserAsync' SqlProcedure attribute of '[]db^CK.GroupTable'
   2018-05-30 15h56.04.7932349   | | | | | | | | | | | | | > Loading '[]db^CK.sGroupUserRemove' of '[]db^CK.GroupTable'.
   2018-05-30 15h56.04.7942332   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sGroupUserRemove.sql'.
   2018-05-30 15h56.04.7942332 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.7942332 i | | | | | | | | | | | | > Handling: 'sGroupRemoveAllUsers' in 'RemoveAllUsersAsync' SqlProcedure attribute of '[]db^CK.GroupTable'
   2018-05-30 15h56.04.7942332   | | | | | | | | | | | | | > Loading '[]db^CK.sGroupRemoveAllUsers' of '[]db^CK.GroupTable'.
   2018-05-30 15h56.04.8082070   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sGroupRemoveAllUsers.sql'.
   2018-05-30 15h56.04.8082070 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8082070 i | | | | | | | | | | | | > Handling: '[]db^CK.vUser' in SqlObjectItem attribute of '[]db^CK.UserTable'
   2018-05-30 15h56.04.8082070   | | | | | | | | | | | | | > Loading '[]db^CK.vUser' of '[]db^CK.UserTable'.
   2018-05-30 15h56.04.8087068   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded View from file 'vUser.sql'.
   2018-05-30 15h56.04.8087068 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8087068 i | | | | | | | | | | | | > Handling: 'sUserCreate' in 'CreateUserAsync' SqlProcedure attribute of '[]db^CK.UserTable'
   2018-05-30 15h56.04.8087068   | | | | | | | | | | | | | > Loading '[]db^CK.sUserCreate' of '[]db^CK.UserTable'.
   2018-05-30 15h56.04.8107028   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserCreate.sql'.
   2018-05-30 15h56.04.8107028 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8107028 i | | | | | | | | | | | | > Handling: 'sUserUserNameSet' in 'UserNameSetAsync' SqlProcedure attribute of '[]db^CK.UserTable'
   2018-05-30 15h56.04.8107028   | | | | | | | | | | | | | > Loading '[]db^CK.sUserUserNameSet' of '[]db^CK.UserTable'.
   2018-05-30 15h56.04.8136967   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserUserNameSet.sql'.
   2018-05-30 15h56.04.8141960 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8141960 i | | | | | | | | | | | | > Handling: 'sUserDestroy' in 'DestroyUserAsync' SqlProcedure attribute of '[]db^CK.UserTable'
   2018-05-30 15h56.04.8141960   | | | | | | | | | | | | | > Loading '[]db^CK.sUserDestroy' of '[]db^CK.UserTable'.
   2018-05-30 15h56.04.8146954   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserDestroy.sql'.
   2018-05-30 15h56.04.8146954 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8146954 i | | | | | | | | | | | | > Handling: 'sUserRemoveFromAllGroups' in 'RemoveFromAllGroupsAsync' SqlProcedure attribute of '[]db^CK.UserTable'
   2018-05-30 15h56.04.8146954   | | | | | | | | | | | | | > Loading '[]db^CK.sUserRemoveFromAllGroups' of '[]db^CK.UserTable'.
   2018-05-30 15h56.04.8156932   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserRemoveFromAllGroups.sql'.
   2018-05-30 15h56.04.8156932 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8156932 i | | | | | | | | | | | | > Handling: '[]db^CK.vUserAuthProvider' in SqlObjectItem attribute of '[]db^CK.DB.Auth.Package'
   2018-05-30 15h56.04.8156932   | | | | | | | | | | | | | > Loading '[]db^CK.vUserAuthProvider' of '[]db^CK.DB.Auth.Package'.
   2018-05-30 15h56.04.8166915   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded View from file 'vUserAuthProvider.sql'.
   2018-05-30 15h56.04.8166915 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8166915 i | | | | | | | | | | | | > Handling: 'sAuthUserInfoRead' in 'CmdReadUserAuthInfo' SqlProcedureNoExecute attribute of '[]db^CK.DB.Auth.Package'
   2018-05-30 15h56.04.8166915   | | | | | | | | | | | | | > Loading '[]db^CK.sAuthUserInfoRead' of '[]db^CK.DB.Auth.Package'.
   2018-05-30 15h56.04.8281716   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sAuthUserInfoRead.sql'.
   2018-05-30 15h56.04.8281716 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8281716 i | | | | | | | | | | | | > Handling: 'sAuthUserOnLogin' in 'OnUserLoginAsync' SqlProcedure attribute of '[]db^CK.DB.Auth.Package'
   2018-05-30 15h56.04.8281716   | | | | | | | | | | | | | > Loading '[]db^CK.sAuthUserOnLogin' of '[]db^CK.DB.Auth.Package'.
   2018-05-30 15h56.04.8331607   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sAuthUserOnLogin.sql'.
   2018-05-30 15h56.04.8336605 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8336605 i | | | | | | | | | | | | > Handling: 'sAuthProviderRegister' in 'RegisterProviderAsync' SqlProcedure attribute of '[]db^CK.AuthProviderTable'
   2018-05-30 15h56.04.8336605   | | | | | | | | | | | | | > Loading '[]db^CK.sAuthProviderRegister' of '[]db^CK.AuthProviderTable'.
   2018-05-30 15h56.04.8351567   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sAuthProviderRegister.sql'.
   2018-05-30 15h56.04.8351567 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8351567 i | | | | | | | | | | | | > Handling: '[]db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider)' in SqlObjectItem attribute of '[]db^CK.DB.User.UserGoogle.Package'
   2018-05-30 15h56.04.8356565   | | | | | | | | | | | | | > Loading '[]db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider)' of '[]db^CK.DB.User.UserGoogle.Package'.
   2018-05-30 15h56.04.8700939   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Transformer from file 'vUserAuthProvider.tql'.
   2018-05-30 15h56.04.8700939 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8700939 i | | | | | | | | | | | | > Handling: '[]db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider)' in SqlObjectItem attribute of '[]db^CK.DB.User.UserOidc.Package'
   2018-05-30 15h56.04.8700939   | | | | | | | | | | | | | > Loading '[]db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider)' of '[]db^CK.DB.User.UserOidc.Package'.
   2018-05-30 15h56.04.8705923   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Transformer from file 'vUserAuthProvider.tql'.
   2018-05-30 15h56.04.8705923 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8705923 i | | | | | | | | | | | | > Handling: '[]db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider)' in SqlObjectItem attribute of '[]db^CK.DB.User.UserPassword.Package'
   2018-05-30 15h56.04.8705923   | | | | | | | | | | | | | > Loading '[]db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider)' of '[]db^CK.DB.User.UserPassword.Package'.
   2018-05-30 15h56.04.8705923   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Transformer from file 'vUserAuthProvider.tql'.
   2018-05-30 15h56.04.8710903 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8710903 i | | | | | | | | | | | | > Handling: '[]db^CK.UserGoogleTable([]db^CK.sUserDestroy)' in SqlObjectItem attribute of '[]db^CK.UserGoogleTable'
   2018-05-30 15h56.04.8710903   | | | | | | | | | | | | | > Loading '[]db^CK.UserGoogleTable([]db^CK.sUserDestroy)' of '[]db^CK.UserGoogleTable'.
   2018-05-30 15h56.04.8720877   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Transformer from file 'sUserDestroy.tql'.
   2018-05-30 15h56.04.8720877 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8720877 i | | | | | | | | | | | | > Handling: 'sUserGoogleDestroy' in 'DestroyGoogleUserAsync' SqlProcedure attribute of '[]db^CK.UserGoogleTable'
   2018-05-30 15h56.04.8720877   | | | | | | | | | | | | | > Loading '[]db^CK.sUserGoogleDestroy' of '[]db^CK.UserGoogleTable'.
   2018-05-30 15h56.04.8725871   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserGoogleDestroy.sql'.
   2018-05-30 15h56.04.8725871 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8725871 i | | | | | | | | | | | | > Handling: 'sUserGoogleUCL' in 'GoogleUserUCLAsync' SqlProcedure attribute of '[]db^CK.UserGoogleTable'
   2018-05-30 15h56.04.8730860   | | | | | | | | | | | | | > Loading '[]db^CK.sUserGoogleUCL' of '[]db^CK.UserGoogleTable'.
   2018-05-30 15h56.04.8765792   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserGoogleUCL.sql'.
   2018-05-30 15h56.04.8765792 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8765792 i | | | | | | | | | | | | > Handling: '[]db^CK.UserOidcTable([]db^CK.sUserDestroy)' in SqlObjectItem attribute of '[]db^CK.UserOidcTable'
   2018-05-30 15h56.04.8770790   | | | | | | | | | | | | | > Loading '[]db^CK.UserOidcTable([]db^CK.sUserDestroy)' of '[]db^CK.UserOidcTable'.
   2018-05-30 15h56.04.8770790   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Transformer from file 'sUserDestroy.tql'.
   2018-05-30 15h56.04.8770790 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8770790 i | | | | | | | | | | | | > Handling: 'sUserOidcDestroy' in 'DestroyOidcUserAsync' SqlProcedure attribute of '[]db^CK.UserOidcTable'
   2018-05-30 15h56.04.8770790   | | | | | | | | | | | | | > Loading '[]db^CK.sUserOidcDestroy' of '[]db^CK.UserOidcTable'.
   2018-05-30 15h56.04.8780772   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserOidcDestroy.sql'.
   2018-05-30 15h56.04.8780772 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8780772 i | | | | | | | | | | | | > Handling: 'sUserOidcUCL' in 'UserOidcULC' SqlProcedure attribute of '[]db^CK.UserOidcTable'
   2018-05-30 15h56.04.8780772   | | | | | | | | | | | | | > Loading '[]db^CK.sUserOidcUCL' of '[]db^CK.UserOidcTable'.
   2018-05-30 15h56.04.8815709   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserOidcUCL.sql'.
   2018-05-30 15h56.04.8815709 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8815709 i | | | | | | | | | | | | > Handling: '[]db^CK.UserPasswordTable([]db^CK.sUserDestroy)' in SqlObjectItem attribute of '[]db^CK.UserPasswordTable'
   2018-05-30 15h56.04.8815709   | | | | | | | | | | | | | > Loading '[]db^CK.UserPasswordTable([]db^CK.sUserDestroy)' of '[]db^CK.UserPasswordTable'.
   2018-05-30 15h56.04.8815709   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Transformer from file 'sUserDestroy.tql'.
   2018-05-30 15h56.04.8815709 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8820694 i | | | | | | | | | | | | > Handling: 'sUserPasswordDestroy' in 'DestroyPasswordUserAsync' SqlProcedure attribute of '[]db^CK.UserPasswordTable'
   2018-05-30 15h56.04.8820694   | | | | | | | | | | | | | > Loading '[]db^CK.sUserPasswordDestroy' of '[]db^CK.UserPasswordTable'.
   2018-05-30 15h56.04.8825692   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserPasswordDestroy.sql'.
   2018-05-30 15h56.04.8825692 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8825692 i | | | | | | | | | | | | > Handling: 'sUserPasswordUCL' in 'PasswordUserUCLAsync' SqlProcedure attribute of '[]db^CK.UserPasswordTable'
   2018-05-30 15h56.04.8825692   | | | | | | | | | | | | | > Loading '[]db^CK.sUserPasswordUCL' of '[]db^CK.UserPasswordTable'.
   2018-05-30 15h56.04.8900545   | | | | | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | | | | | |    | Loaded Procedure from file 'sUserPasswordUCL.sql'.
   2018-05-30 15h56.04.8900545 i | | | | | | | | | | | | < 
   2018-05-30 15h56.04.8900545 i | | | | | | | | | | | < 
   2018-05-30 15h56.04.8900545 i | | | | | | | | | | < 
   2018-05-30 15h56.04.8900545 i | | | | | | | | | < 
   2018-05-30 15h56.04.8905539 i | | | | | | | | < 
   2018-05-30 15h56.04.8940471   | | | | | | | | > Installing CKCore kernel.
   2018-05-30 15h56.04.9126971   | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | |    | Already installed in version 15.
   2018-05-30 15h56.04.9522489 i | | | | | | | | > Reading original versions.
   2018-05-30 15h56.04.9537460   | | | | | | | | | > Installing SqlVersionedItemRepository store.
   2018-05-30 15h56.04.9662450   | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | Already installed in version 1.
   2018-05-30 15h56.04.9702380 i | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | |    | Got 26 versions.
   2018-05-30 15h56.04.9727330 i | | | | | | | | > Setupable Core Engine initialization.
   2018-05-30 15h56.04.9727330 i | | | | | | | | | Starting a new setup.
   2018-05-30 15h56.04.9747295 i | | | | | | | | < 
   2018-05-30 15h56.04.9747295 i | | | | | | | | > Register step.
   2018-05-30 15h56.05.0111620 i | | | | | | | | | > Instanciating drivers for 88 items.
   2018-05-30 15h56.05.0291279 i | | | | | | | | | < 
   2018-05-30 15h56.05.0296273 i | | | | | | | | | > Calling PreInit on 88 drivers.
   2018-05-30 15h56.05.0455976 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.ActorTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1009947 i | | | | | | | | | | 1 sql scripts in resource found for 'Model.CK.ActorTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1109759 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.GroupTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1109759 i | | | | | | | | | | 2 sql scripts in resource found for 'Model.CK.GroupTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1119742 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.UserTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1119742 i | | | | | | | | | | 5 sql scripts in resource found for 'Model.CK.UserTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1124731 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.ActorProfileTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1129724 i | | | | | | | | | | 1 sql scripts in resource found for 'Model.CK.ActorProfileTable' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1129724 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.DB.Actor.Package' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1134713 i | | | | | | | | | | 0 sql scripts in resource found for 'Model.CK.DB.Actor.Package' in 'CK.DB.Actor:CK.DB.Actor.Res.*.
   2018-05-30 15h56.05.1139702 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.AuthProviderTable' in 'CK.DB.Auth:CK.DB.Auth.Res.*.
   2018-05-30 15h56.05.1139702 i | | | | | | | | | | 3 sql scripts in resource found for 'Model.CK.AuthProviderTable' in 'CK.DB.Auth:CK.DB.Auth.Res.*.
   2018-05-30 15h56.05.1144696 i | | | | | | | | | | 0 sql scripts in resource found for 'CK.DB.Auth.Package' in 'CK.DB.Auth:CK.DB.Auth.Res.*.
   2018-05-30 15h56.05.1144696 i | | | | | | | | | | 0 sql scripts in resource found for 'Model.CK.DB.Auth.Package' in 'CK.DB.Auth:CK.DB.Auth.Res.*.
   2018-05-30 15h56.05.1144696 i | | | | | | | | | | 1 sql scripts in resource found for 'CK.UserGoogleTable' in 'CK.DB.User.UserGoogle:CK.DB.User.UserGoogle.Res.*.
   2018-05-30 15h56.05.1149685 i | | | | | | | | | | 4 sql scripts in resource found for 'Model.CK.UserGoogleTable' in 'CK.DB.User.UserGoogle:CK.DB.User.UserGoogle.Res.*.
   2018-05-30 15h56.05.1154674 i | | | | | | | | | | 1 sql scripts in resource found for 'CK.UserOidcTable' in 'CK.DB.User.UserOidc:CK.DB.User.UserOidc.Res.*.
   2018-05-30 15h56.05.1154674 i | | | | | | | | | | 1 sql scripts in resource found for 'Model.CK.UserOidcTable' in 'CK.DB.User.UserOidc:CK.DB.User.UserOidc.Res.*.
   2018-05-30 15h56.05.1159668 i | | | | | | | | | | 1 sql scripts in resource found for 'CK.UserPasswordTable' in 'CK.DB.User.UserPassword:CK.DB.User.UserPassword.Res.*.
   2018-05-30 15h56.05.1159668 i | | | | | | | | | | 2 sql scripts in resource found for 'Model.CK.UserPasswordTable' in 'CK.DB.User.UserPassword:CK.DB.User.UserPassword.Res.*.
   2018-05-30 15h56.05.1164661 i | | | | | | | | | | 1 sql scripts in resource found for 'CK.DB.User.UserGoogle.Package' in 'CK.DB.User.UserGoogle:CK.DB.User.UserGoogle.Res.*.
   2018-05-30 15h56.05.1164661 i | | | | | | | | | | 0 sql scripts in resource found for 'Model.CK.DB.User.UserGoogle.Package' in 'CK.DB.User.UserGoogle:CK.DB.User.UserGoogle.Res.*.
   2018-05-30 15h56.05.1169650 i | | | | | | | | | | 1 sql scripts in resource found for 'CK.DB.User.UserOidc.Package' in 'CK.DB.User.UserOidc:CK.DB.User.UserOidc.Res.*.
   2018-05-30 15h56.05.1169650 i | | | | | | | | | | 0 sql scripts in resource found for 'Model.CK.DB.User.UserOidc.Package' in 'CK.DB.User.UserOidc:CK.DB.User.UserOidc.Res.*.
   2018-05-30 15h56.05.1169650 i | | | | | | | | | | 2 sql scripts in resource found for 'CK.DB.User.UserPassword.Package' in 'CK.DB.User.UserPassword:CK.DB.User.UserPassword.Res.*.
   2018-05-30 15h56.05.1174644 i | | | | | | | | | | 0 sql scripts in resource found for 'Model.CK.DB.User.UserPassword.Package' in 'CK.DB.User.UserPassword:CK.DB.User.UserPassword.Res.*.
   2018-05-30 15h56.05.1174644 i | | | | | | | | | < 
   2018-05-30 15h56.05.1179637 i | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | |    | 88 Setup items registered.
   2018-05-30 15h56.05.1179637 i | | | | | | | | > Init step.
   2018-05-30 15h56.05.1189624   | | | | | | | | | > Raising Init setup event.
   2018-05-30 15h56.05.1194618   | | | | | | | | | < 
   2018-05-30 15h56.05.1194618 i | | | | | | | | | > Initializing []CK._g.poco.Factory
   2018-05-30 15h56.05.1209585 i | | | | | | | | | < 
   2018-05-30 15h56.05.1209585 i | | | | | | | | | > Initializing []db^SqlDatabase.Connection
   2018-05-30 15h56.05.1269458   | | | | | | | | | | if not exists(select 1 from sys.schemas where name = 'CK') begin exec( 'create schema [CK]' ); end
   2018-05-30 15h56.05.1274478   | | | | | | | | | | GO
   2018-05-30 15h56.05.1339345   | | | | | | | | | | -- Ensure that snapshot_isolation and read_committed_snapshot are on for this db.
                                 | | | | | | | | | |   declare @dbName sysname = DB_NAME();
                                 | | | | | | | | | |   declare @dbNameQ sysname = QUOTENAME(@dbName);
                                 | | | | | | | | | |   declare @isSingleUser bit = 0;
                                 | | | | | | | | | |   declare @isRCSEnabled int;
                                 | | | | | | | | | |   select @isRCSEnabled = is_read_committed_snapshot_on from sys.databases where name = @dbName;
                                 | | | | | | | | | |   if @isRCSEnabled = 0
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |       exec( 'alter database '+@dbNameQ+' set single_user with rollback immediate;' );
                                 | | | | | | | | | |       set @isSingleUser = 1;
                                 | | | | | | | | | |       exec( 'alter database '+@dbNameQ+' set read_committed_snapshot on;' );
                                 | | | | | | | | | |   end;
                                 | | | | | | | | | |    
                                 | | | | | | | | | |   declare @isSIEnabled int;
                                 | | | | | | | | | |   select @isSIEnabled = snapshot_isolation_state from sys.databases where name = @dbName;
                                 | | | | | | | | | |   if @isSIEnabled = 0
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |       if @isSingleUser = 0 exec ('alter database ' + @dbNameQ + ' set single_user with rollback immediate;');
                                 | | | | | | | | | |       exec( 'alter database '+@dbNameQ+' set allow_snapshot_isolation on;' );
                                 | | | | | | | | | |   end;
                                 | | | | | | | | | |    
                                 | | | | | | | | | |   if @isSingleUser = 1 exec( 'alter database '+@dbNameQ+' set multi_user;' );
   2018-05-30 15h56.05.1339345   | | | | | | | | | | GO
   2018-05-30 15h56.05.2033049 i | | | | | | | | | < 
   2018-05-30 15h56.05.2033049 i | | | | | | | | | > Initializing []db^Model.SqlDatabase.Head
   2018-05-30 15h56.05.2038038 i | | | | | | | | | < 
   2018-05-30 15h56.05.2038038 i | | | | | | | | | > Initializing []db^Model.CK.DB.Actor.Package.Head
   2018-05-30 15h56.05.2038038 i | | | | | | | | | < 
   2018-05-30 15h56.05.2038038 i | | | | | | | | | > Initializing []db^Model.CK.ActorTable.Head
   2018-05-30 15h56.05.2038038 i | | | | | | | | | < 
   2018-05-30 15h56.05.2038038 i | | | | | | | | | > Initializing []db^Model.CK.ActorTable
   2018-05-30 15h56.05.2043027 i | | | | | | | | | < 
   2018-05-30 15h56.05.2043027 i | | | | | | | | | > Initializing []db^Model.CK.GroupTable.Head
   2018-05-30 15h56.05.2043027 i | | | | | | | | | < 
   2018-05-30 15h56.05.2043027 i | | | | | | | | | > Initializing []db^Model.CK.UserTable.Head
   2018-05-30 15h56.05.2043027 i | | | | | | | | | < 
   2018-05-30 15h56.05.2043027 i | | | | | | | | | > Initializing []db^Model.CK.GroupTable
   2018-05-30 15h56.05.2043027 i | | | | | | | | | < 
   2018-05-30 15h56.05.2043027 i | | | | | | | | | > Initializing []db^Model.CK.UserTable
   2018-05-30 15h56.05.2043027 i | | | | | | | | | < 
   2018-05-30 15h56.05.2043027 i | | | | | | | | | > Initializing []db^Model.CK.ActorProfileTable.Head
   2018-05-30 15h56.05.2043027 i | | | | | | | | | < 
   2018-05-30 15h56.05.2043027 i | | | | | | | | | > Initializing []db^Model.CK.ActorProfileTable
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.DB.Actor.Package
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.DB.Auth.Package.Head
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.AuthProviderTable.Head
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.AuthProviderTable
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.DB.Auth.Package
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.DB.User.UserGoogle.Package.Head
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2048016 i | | | | | | | | | > Initializing []db^Model.CK.DB.User.UserOidc.Package.Head
   2018-05-30 15h56.05.2048016 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.DB.User.UserPassword.Package.Head
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.UserGoogleTable.Head
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.UserOidcTable.Head
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.UserPasswordTable.Head
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.UserGoogleTable
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.UserOidcTable
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2053005 i | | | | | | | | | > Initializing []db^Model.CK.UserPasswordTable
   2018-05-30 15h56.05.2053005 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^Model.CK.DB.User.UserGoogle.Package
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^Model.CK.DB.User.UserOidc.Package
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^Model.CK.DB.User.UserPassword.Package
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^Model.SqlDatabase
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^SqlDatabase.Head
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^CK.DB.Actor.Package.Head
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^CK.ActorTable.Head
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2057995 i | | | | | | | | | > Initializing []db^CK.sActorCreate
   2018-05-30 15h56.05.2057995 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.ActorTable
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.GroupTable.Head
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.UserTable.Head
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.sGroupCreate
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.sGroupUserAdd
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.sGroupUserRemove
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.sUserCreate
   2018-05-30 15h56.05.2062988 i | | | | | | | | | < 
   2018-05-30 15h56.05.2062988 i | | | | | | | | | > Initializing []db^CK.sUserUserNameSet
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.vGroup
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.vUser
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.sGroupRemoveAllUsers
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.sUserRemoveFromAllGroups
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.sGroupDestroy
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.sUserDestroy
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.GroupTable
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.UserTable
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.ActorProfileTable.Head
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.ActorProfileTable
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.DB.Actor.Package
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.DB.Auth.Package.Head
   2018-05-30 15h56.05.2067977 i | | | | | | | | | < 
   2018-05-30 15h56.05.2067977 i | | | | | | | | | > Initializing []db^CK.AuthProviderTable.Head
   2018-05-30 15h56.05.2072984 i | | | | | | | | | < 
   2018-05-30 15h56.05.2072984 i | | | | | | | | | > Initializing []db^CK.sAuthUserOnLogin
   2018-05-30 15h56.05.2072984 i | | | | | | | | | < 
   2018-05-30 15h56.05.2072984 i | | | | | | | | | > Initializing []db^CK.vUserAuthProvider
   2018-05-30 15h56.05.2072984 i | | | | | | | | | < 
   2018-05-30 15h56.05.2072984 i | | | | | | | | | > Initializing []db^CK.sAuthProviderRegister
   2018-05-30 15h56.05.2072984 i | | | | | | | | | < 
   2018-05-30 15h56.05.2072984 i | | | | | | | | | > Initializing []db^CK.sAuthUserInfoRead
   2018-05-30 15h56.05.2072984 i | | | | | | | | | < 
   2018-05-30 15h56.05.2072984 i | | | | | | | | | > Initializing []db^CK.AuthProviderTable
   2018-05-30 15h56.05.2072984 i | | | | | | | | | < 
   2018-05-30 15h56.05.2072984 i | | | | | | | | | > Initializing []db^CK.DB.Auth.Package
   2018-05-30 15h56.05.2077960 i | | | | | | | | | < 
   2018-05-30 15h56.05.2077960 i | | | | | | | | | > Initializing []db^CK.DB.User.UserGoogle.Package.Head
   2018-05-30 15h56.05.2077960 i | | | | | | | | | < 
   2018-05-30 15h56.05.2077960 i | | | | | | | | | > Initializing []db^CK.DB.User.UserOidc.Package.Head
   2018-05-30 15h56.05.2077960 i | | | | | | | | | < 
   2018-05-30 15h56.05.2077960 i | | | | | | | | | > Initializing []db^CK.DB.User.UserPassword.Package.Head
   2018-05-30 15h56.05.2077960 i | | | | | | | | | < 
   2018-05-30 15h56.05.2077960 i | | | | | | | | | > Initializing []db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider)
   2018-05-30 15h56.05.2077960 i | | | | | | | | | < 
   2018-05-30 15h56.05.2077960 i | | | | | | | | | > Initializing []db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider)
   2018-05-30 15h56.05.2077960 i | | | | | | | | | < 
   2018-05-30 15h56.05.2077960 i | | | | | | | | | > Initializing []db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider)
   2018-05-30 15h56.05.2082949 i | | | | | | | | | < 
   2018-05-30 15h56.05.2082949 i | | | | | | | | | > Initializing []db^CK.UserGoogleTable.Head
   2018-05-30 15h56.05.2082949 i | | | | | | | | | < 
   2018-05-30 15h56.05.2082949 i | | | | | | | | | > Initializing []db^CK.UserOidcTable.Head
   2018-05-30 15h56.05.2082949 i | | | | | | | | | < 
   2018-05-30 15h56.05.2082949 i | | | | | | | | | > Initializing []db^CK.UserPasswordTable.Head
   2018-05-30 15h56.05.2082949 i | | | | | | | | | < 
   2018-05-30 15h56.05.2082949 i | | | | | | | | | > Initializing []db^CK.sUserGoogleDestroy
   2018-05-30 15h56.05.2082949 i | | | | | | | | | < 
   2018-05-30 15h56.05.2082949 i | | | | | | | | | > Initializing []db^CK.sUserGoogleUCL
   2018-05-30 15h56.05.2087942 i | | | | | | | | | < 
   2018-05-30 15h56.05.2087942 i | | | | | | | | | > Initializing []db^CK.sUserOidcDestroy
   2018-05-30 15h56.05.2087942 i | | | | | | | | | < 
   2018-05-30 15h56.05.2087942 i | | | | | | | | | > Initializing []db^CK.sUserOidcUCL
   2018-05-30 15h56.05.2087942 i | | | | | | | | | < 
   2018-05-30 15h56.05.2087942 i | | | | | | | | | > Initializing []db^CK.sUserPasswordDestroy
   2018-05-30 15h56.05.2087942 i | | | | | | | | | < 
   2018-05-30 15h56.05.2087942 i | | | | | | | | | > Initializing []db^CK.sUserPasswordUCL
   2018-05-30 15h56.05.2092931 i | | | | | | | | | < 
   2018-05-30 15h56.05.2092931 i | | | | | | | | | > Initializing []db^CK.UserGoogleTable([]db^CK.sUserDestroy)
   2018-05-30 15h56.05.2092931 i | | | | | | | | | < 
   2018-05-30 15h56.05.2092931 i | | | | | | | | | > Initializing []db^CK.UserOidcTable([]db^CK.sUserDestroy)
   2018-05-30 15h56.05.2092931 i | | | | | | | | | < 
   2018-05-30 15h56.05.2092931 i | | | | | | | | | > Initializing []db^CK.UserPasswordTable([]db^CK.sUserDestroy)
   2018-05-30 15h56.05.2097920 i | | | | | | | | | < 
   2018-05-30 15h56.05.2097920 i | | | | | | | | | > Initializing []db^CK.vUserAuthProvider#transform
   2018-05-30 15h56.05.2097920 i | | | | | | | | | < 
   2018-05-30 15h56.05.2097920 i | | | | | | | | | > Initializing []db^CK.sUserDestroy#transform
   2018-05-30 15h56.05.2097920 i | | | | | | | | | < 
   2018-05-30 15h56.05.2097920 i | | | | | | | | | > Initializing []db^CK.UserGoogleTable
   2018-05-30 15h56.05.2097920 i | | | | | | | | | < 
   2018-05-30 15h56.05.2097920 i | | | | | | | | | > Initializing []db^CK.UserOidcTable
   2018-05-30 15h56.05.2102914 i | | | | | | | | | < 
   2018-05-30 15h56.05.2102914 i | | | | | | | | | > Initializing []db^CK.UserPasswordTable
   2018-05-30 15h56.05.2102914 i | | | | | | | | | < 
   2018-05-30 15h56.05.2102914 i | | | | | | | | | > Initializing []db^CK.DB.User.UserGoogle.Package
   2018-05-30 15h56.05.2102914 i | | | | | | | | | < 
   2018-05-30 15h56.05.2102914 i | | | | | | | | | > Initializing []db^CK.DB.User.UserOidc.Package
   2018-05-30 15h56.05.2102914 i | | | | | | | | | < 
   2018-05-30 15h56.05.2102914 i | | | | | | | | | > Initializing []db^CK.DB.User.UserPassword.Package
   2018-05-30 15h56.05.2107903 i | | | | | | | | | < 
   2018-05-30 15h56.05.2107903 i | | | | | | | | | > Initializing []db^SqlDatabase
   2018-05-30 15h56.05.2107903 i | | | | | | | | | < 
   2018-05-30 15h56.05.2107903 i | | | | | | | | < 
   2018-05-30 15h56.05.2107903 i | | | | | | | | > Install step.
   2018-05-30 15h56.05.2122879   | | | | | | | | | > Raising Install setup event.
   2018-05-30 15h56.05.2122879   | | | | | | | | | < 
   2018-05-30 15h56.05.2127872 i | | | | | | | | | > Installing []CK._g.poco.Factory (unversioned).
   2018-05-30 15h56.05.2147829 i | | | | | | | | | < 
   2018-05-30 15h56.05.2147829 i | | | | | | | | | > Installing []db^SqlDatabase.Connection (unversioned).
   2018-05-30 15h56.05.2147829 i | | | | | | | | | < 
   2018-05-30 15h56.05.2147829 i | | | | | | | | | > Installing []db^Model.SqlDatabase.Head (unversioned).
   2018-05-30 15h56.05.2152818 i | | | | | | | | | < 
   2018-05-30 15h56.05.2152818 i | | | | | | | | | > Installing []db^Model.CK.DB.Actor.Package.Head (= 5.0.0 =).
   2018-05-30 15h56.05.2152818 i | | | | | | | | | < 
   2018-05-30 15h56.05.2157807 i | | | | | | | | | > Installing []db^Model.CK.ActorTable.Head (= 5.0.0 =).
   2018-05-30 15h56.05.2157807 i | | | | | | | | | < 
   2018-05-30 15h56.05.2157807 i | | | | | | | | | > Installing []db^Model.CK.ActorTable (= 5.0.0 =).
   2018-05-30 15h56.05.2157807 i | | | | | | | | | < 
   2018-05-30 15h56.05.2157807 i | | | | | | | | | > Installing []db^Model.CK.GroupTable.Head (= 5.0.1 =).
   2018-05-30 15h56.05.2157807 i | | | | | | | | | < 
   2018-05-30 15h56.05.2157807 i | | | | | | | | | > Installing []db^Model.CK.UserTable.Head (= 5.0.3 =).
   2018-05-30 15h56.05.2157807 i | | | | | | | | | < 
   2018-05-30 15h56.05.2157807 i | | | | | | | | | > Installing []db^Model.CK.GroupTable (= 5.0.1 =).
   2018-05-30 15h56.05.2157807 i | | | | | | | | | < 
   2018-05-30 15h56.05.2157807 i | | | | | | | | | > Installing []db^Model.CK.UserTable (= 5.0.3 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.ActorProfileTable.Head (= 5.0.0 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.ActorProfileTable (= 5.0.0 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.DB.Actor.Package (= 5.0.0 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.DB.Auth.Package.Head (= 1.0.0 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.AuthProviderTable.Head (= 1.0.2 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.AuthProviderTable (= 1.0.2 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.DB.Auth.Package (= 1.0.0 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2162796 i | | | | | | | | | > Installing []db^Model.CK.DB.User.UserGoogle.Package.Head (= 1.0.0 =).
   2018-05-30 15h56.05.2162796 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.DB.User.UserOidc.Package.Head (= 1.0.0 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.DB.User.UserPassword.Package.Head (= 1.0.1 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.UserGoogleTable.Head (= 2.0.1 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.UserOidcTable.Head (= 2.0.1 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.UserPasswordTable.Head (= 1.0.2 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.UserGoogleTable (= 2.0.1 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.UserOidcTable (= 2.0.1 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.UserPasswordTable (= 1.0.2 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.DB.User.UserGoogle.Package (= 1.0.0 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.DB.User.UserOidc.Package (= 1.0.0 =).
   2018-05-30 15h56.05.2167794 i | | | | | | | | | < 
   2018-05-30 15h56.05.2167794 i | | | | | | | | | > Installing []db^Model.CK.DB.User.UserPassword.Package (= 1.0.1 =).
   2018-05-30 15h56.05.2172787 i | | | | | | | | | < 
   2018-05-30 15h56.05.2172787 i | | | | | | | | | > Installing []db^Model.SqlDatabase (unversioned).
   2018-05-30 15h56.05.2172787 i | | | | | | | | | < 
   2018-05-30 15h56.05.2172787 i | | | | | | | | | > Installing []db^SqlDatabase.Head (unversioned).
   2018-05-30 15h56.05.2172787 i | | | | | | | | | < 
   2018-05-30 15h56.05.2172787 i | | | | | | | | | > Installing []db^CK.DB.Actor.Package.Head (= 5.0.0 =).
   2018-05-30 15h56.05.2172787 i | | | | | | | | | < 
   2018-05-30 15h56.05.2172787 i | | | | | | | | | > Installing []db^CK.ActorTable.Head (= 5.0.0 =).
   2018-05-30 15h56.05.2172787 i | | | | | | | | | < 
   2018-05-30 15h56.05.2172787 i | | | | | | | | | > Installing []db^CK.sActorCreate (unversioned).
   2018-05-30 15h56.05.2297553   | | | | | | | | | | if OBJECT_ID('CK.sActorCreate') is not null drop Procedure CK.sActorCreate;
   2018-05-30 15h56.05.2297553   | | | | | | | | | | GO
   2018-05-30 15h56.05.3041175   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   create procedure CK.sActorCreate 
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@ActorIdResult int output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreCreate revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	insert into CK.tActor default values;
                                 | | | | | | | | | |   	set @ActorIdResult = SCOPE_IDENTITY();
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	-- The actor is in its own group.
                                 | | | | | | | | | |   	insert into CK.tActorProfile( ActorId, GroupId ) values( @ActorIdResult, @ActorIdResult );
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostCreate />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3046160   | | | | | | | | | | GO
   2018-05-30 15h56.05.3142532 i | | | | | | | | | < 
   2018-05-30 15h56.05.3142532 i | | | | | | | | | > Installing []db^CK.ActorTable (= 5.0.0 =).
   2018-05-30 15h56.05.3142532 i | | | | | | | | | < 
   2018-05-30 15h56.05.3142532 i | | | | | | | | | > Installing []db^CK.GroupTable.Head (= 5.0.1 =).
   2018-05-30 15h56.05.3142532 i | | | | | | | | | < 
   2018-05-30 15h56.05.3147534 i | | | | | | | | | > Installing []db^CK.UserTable.Head (= 5.0.3 =).
   2018-05-30 15h56.05.3147534 i | | | | | | | | | < 
   2018-05-30 15h56.05.3147534 i | | | | | | | | | > Installing []db^CK.sGroupCreate (unversioned).
   2018-05-30 15h56.05.3152528   | | | | | | | | | | if OBJECT_ID('CK.sGroupCreate') is not null drop Procedure CK.sGroupCreate;
   2018-05-30 15h56.05.3152528   | | | | | | | | | | GO
   2018-05-30 15h56.05.3192427   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sActorCreate" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Creates a Group.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sGroupCreate 
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@GroupIdResult int output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreCreate revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	exec CK.sActorCreate @ActorId, @GroupIdResult output;
                                 | | | | | | | | | |   	insert into CK.tGroup( GroupId ) values( @GroupIdResult );
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostCreate />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3197416   | | | | | | | | | | GO
   2018-05-30 15h56.05.3232357 i | | | | | | | | | < 
   2018-05-30 15h56.05.3232357 i | | | | | | | | | > Installing []db^CK.sGroupUserAdd (unversioned).
   2018-05-30 15h56.05.3237346   | | | | | | | | | | if OBJECT_ID('CK.sGroupUserAdd') is not null drop Procedure CK.sGroupUserAdd;
   2018-05-30 15h56.05.3237346   | | | | | | | | | | GO
   2018-05-30 15h56.05.3417460   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Add a User to a Group. Does nothing if the User is already in the Group.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sGroupUserAdd 
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@GroupId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @GroupId <= 0 throw 50000, 'Group.InvalidId', 1;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	-- System is, somehow, already in all groups.
                                 | | | | | | | | | |       if @UserId = 1 return 0;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   if @GroupId <> @UserId and not exists (select * from CK.tActorProfile where GroupId = @GroupId and ActorId = @UserId)
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		-- If this is the System Group, only members of it can add new Users.
                                 | | | | | | | | | |   		if @GroupId = 1 
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |   			if not exists( select 1 from CK.tActorProfile p where p.GroupId = 1 and p.ActorId = @ActorId ) 
                                 | | | | | | | | | |   			begin
                                 | | | | | | | | | |   				;throw 50000, 'Security.ActorMustBeSytem', 1;
                                 | | | | | | | | | |   			end
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PreUserAdd revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		insert into CK.tActorProfile( ActorId, GroupId ) values( @UserId, @GroupId );
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostUserAdd />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3422449   | | | | | | | | | | GO
   2018-05-30 15h56.05.3447412 i | | | | | | | | | < 
   2018-05-30 15h56.05.3447412 i | | | | | | | | | > Installing []db^CK.sGroupUserRemove (unversioned).
   2018-05-30 15h56.05.3447412   | | | | | | | | | | if OBJECT_ID('CK.sGroupUserRemove') is not null drop Procedure CK.sGroupUserRemove;
   2018-05-30 15h56.05.3447412   | | | | | | | | | | GO
   2018-05-30 15h56.05.3472362   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Removes a User from a Group.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sGroupUserRemove
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@GroupId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @GroupId <= 0 throw 50000, 'Group.InvalidId', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   if @GroupId <> @UserId and exists (select * from CK.tActorProfile where GroupId = @GroupId and ActorId = @UserId)
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		-- If this is the System Group, only members of it can remove Users.
                                 | | | | | | | | | |   		if @GroupId = 1 
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |   			if not exists( select 1 from CK.tActorProfile p where p.GroupId = 1 and p.ActorId = @ActorId ) 
                                 | | | | | | | | | |   			begin
                                 | | | | | | | | | |   				;throw 50000, 'Security.ActorMustBeSytem', 1;
                                 | | | | | | | | | |   			end
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PreUserRemove revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		delete from CK.tActorProfile where GroupId = @GroupId and ActorId = @UserId;
                                 | | | | | | | | | |   		
                                 | | | | | | | | | |   		--<PostUserRemove />
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3472362   | | | | | | | | | | GO
   2018-05-30 15h56.05.3507299 i | | | | | | | | | < 
   2018-05-30 15h56.05.3507299 i | | | | | | | | | > Installing []db^CK.sUserCreate (unversioned).
   2018-05-30 15h56.05.3507299   | | | | | | | | | | if OBJECT_ID('CK.sUserCreate') is not null drop Procedure CK.sUserCreate;
   2018-05-30 15h56.05.3507299   | | | | | | | | | | GO
   2018-05-30 15h56.05.3527259   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sActorCreate" ] }
                                 | | | | | | | | | |   create procedure CK.sUserCreate 
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserName nvarchar( 255 ),
                                 | | | | | | | | | |   	@UserIdResult int output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   set @UserIdResult = 0;
                                 | | | | | | | | | |   	if exists( select UserId from CK.tUser where UserName = @UserName )
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		set @UserIdResult = -1;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	if @UserIdResult = 0
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		--<PreCreate revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sActorCreate @ActorId, @UserIdResult output;
                                 | | | | | | | | | |   		insert into CK.tUser( UserId, UserName ) values ( @UserIdResult, @UserName );
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostCreate />
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3532266   | | | | | | | | | | GO
   2018-05-30 15h56.05.3557211 i | | | | | | | | | < 
   2018-05-30 15h56.05.3557211 i | | | | | | | | | > Installing []db^CK.sUserUserNameSet (unversioned).
   2018-05-30 15h56.05.3557211   | | | | | | | | | | if OBJECT_ID('CK.sUserUserNameSet') is not null drop Procedure CK.sUserUserNameSet;
   2018-05-30 15h56.05.3557211   | | | | | | | | | | GO
   2018-05-30 15h56.05.3582161   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   -- Sets the user name. 
                                 | | | | | | | | | |   -- There is no guaranty that the actual value will be the same as the one requested (if auto numbering 
                                 | | | | | | | | | |   -- is injected for example). 
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserUserNameSet
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |       @ActorId int,
                                 | | | | | | | | | |       @UserId int,
                                 | | | | | | | | | |       @UserName nvarchar(127),
                                 | | | | | | | | | |   	@Done bit output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   set @Done = 1;
                                 | | | | | | | | | |   	if exists( select * from CK.tUser where UserName = @UserName and UserId <> @UserId )
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		set @Done = 0;
                                 | | | | | | | | | |   		--<UserNameSetClash />
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	if @Done = 1
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		--<PreUserNameSet revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		update u 
                                 | | | | | | | | | |   			set u.UserName = @UserName
                                 | | | | | | | | | |   			from CK.tUser u   
                                 | | | | | | | | | |   			where u.UserId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostUserNameSet />
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3582161   | | | | | | | | | | GO
   2018-05-30 15h56.05.3602122 i | | | | | | | | | < 
   2018-05-30 15h56.05.3602122 i | | | | | | | | | > Installing []db^CK.vGroup (unversioned).
   2018-05-30 15h56.05.3607106   | | | | | | | | | | if OBJECT_ID('CK.vGroup') is not null drop View CK.vGroup;
   2018-05-30 15h56.05.3607106   | | | | | | | | | | GO
   2018-05-30 15h56.05.3637049   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   create view CK.vGroup
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   	select  g.GroupId,
                                 | | | | | | | | | |   			GroupName = N'#Group-' +  cast(g.GroupId as varchar) collate Latin1_General_100_CI_AI,
                                 | | | | | | | | | |   			UserCount = (select count(*) 
                                 | | | | | | | | | |   							from CK.tUser u with(nolock) 
                                 | | | | | | | | | |   							inner join CK.tActorProfile p with(nolock) on p.ActorId = u.UserId
                                 | | | | | | | | | |   							where p.GroupId = g.GroupId)
                                 | | | | | | | | | |   		from CK.tGroup g;
   2018-05-30 15h56.05.3637049   | | | | | | | | | | GO
   2018-05-30 15h56.05.3652119 i | | | | | | | | | < 
   2018-05-30 15h56.05.3652119 i | | | | | | | | | > Installing []db^CK.vUser (unversioned).
   2018-05-30 15h56.05.3657019   | | | | | | | | | | if OBJECT_ID('CK.vUser') is not null drop View CK.vUser;
   2018-05-30 15h56.05.3657019   | | | | | | | | | | GO
   2018-05-30 15h56.05.3671986   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   create view CK.vUser
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   	select  u.UserId,
                                 | | | | | | | | | |   			u.CreationDate,
                                 | | | | | | | | | |   			u.UserName
                                 | | | | | | | | | |   		from CK.tUser u;
   2018-05-30 15h56.05.3671986   | | | | | | | | | | GO
   2018-05-30 15h56.05.3681978 i | | | | | | | | | < 
   2018-05-30 15h56.05.3681978 i | | | | | | | | | > Installing []db^CK.sGroupRemoveAllUsers (unversioned).
   2018-05-30 15h56.05.3681978   | | | | | | | | | | if OBJECT_ID('CK.sGroupRemoveAllUsers') is not null drop Procedure CK.sGroupRemoveAllUsers;
   2018-05-30 15h56.05.3686967   | | | | | | | | | | GO
   2018-05-30 15h56.05.3721890   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sGroupUserRemove" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Clears a Group.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sGroupRemoveAllUsers
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@GroupId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @GroupId <= 0 throw 50000, 'Group.InvalidGroup', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   declare @UserId int;
                                 | | | | | | | | | |   	declare @CUser cursor;
                                 | | | | | | | | | |   	set @CUser = cursor local fast_forward for 
                                 | | | | | | | | | |   		select ActorId from CK.tActorProfile p 
                                 | | | | | | | | | |   						inner join CK.tUser u on u.UserId = p.ActorId
                                 | | | | | | | | | |   						where p.GroupId = @GroupId and p.ActorId <> @GroupId;
                                 | | | | | | | | | |   	open @CUser;
                                 | | | | | | | | | |   	fetch from @CUser into @UserId;
                                 | | | | | | | | | |   	while @@FETCH_STATUS = 0
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		exec CK.sGroupUserRemove @ActorId, @GroupId, @UserId;
                                 | | | | | | | | | |   		fetch next from @CUser into @UserId;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	deallocate @CUser;
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3721890   | | | | | | | | | | GO
   2018-05-30 15h56.05.3756827 i | | | | | | | | | < 
   2018-05-30 15h56.05.3756827 i | | | | | | | | | > Installing []db^CK.sUserRemoveFromAllGroups (unversioned).
   2018-05-30 15h56.05.3761851   | | | | | | | | | | if OBJECT_ID('CK.sUserRemoveFromAllGroups') is not null drop Procedure CK.sUserRemoveFromAllGroups;
   2018-05-30 15h56.05.3761851   | | | | | | | | | | GO
   2018-05-30 15h56.05.3786770   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sGroupUserRemove" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Removes a User from all the Groups it belongs to.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserRemoveFromAllGroups
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   declare @GroupId int;
                                 | | | | | | | | | |   	declare @CGroup cursor;
                                 | | | | | | | | | |   	set @CGroup = cursor local fast_forward for 
                                 | | | | | | | | | |   		select GroupId from CK.tActorProfile where ActorId = @UserId and GroupId <> @UserId;
                                 | | | | | | | | | |   	open @CGroup
                                 | | | | | | | | | |   	fetch from @CGroup into @GroupId
                                 | | | | | | | | | |   	while @@FETCH_STATUS = 0
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		exec CK.sGroupUserRemove @ActorId, @GroupId, @UserId;
                                 | | | | | | | | | |   		fetch next from @CGroup into @GroupId;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	deallocate @CGroup;
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3786770   | | | | | | | | | | GO
   2018-05-30 15h56.05.3811724 i | | | | | | | | | < 
   2018-05-30 15h56.05.3811724 i | | | | | | | | | > Installing []db^CK.sGroupDestroy (unversioned).
   2018-05-30 15h56.05.3811724   | | | | | | | | | | if OBJECT_ID('CK.sGroupDestroy') is not null drop Procedure CK.sGroupDestroy;
   2018-05-30 15h56.05.3816713   | | | | | | | | | | GO
   2018-05-30 15h56.05.3836821   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sGroupRemoveAllUsers" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Destroys a Group: can work only if there is no Users inside the Group except if @ForceDestroy = 1.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sGroupDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@GroupId int,
                                 | | | | | | | | | |   	@ForceDestroy bit = 0
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @GroupId <= 1 throw 50000, 'Group.Undestroyable', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreDestroy revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	if @ForceDestroy = 1
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		exec CK.sGroupRemoveAllUsers @ActorId, @GroupId;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	else
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		if exists( select * from CK.tActorProfile where GroupId = @GroupId and ActorId <> @GroupId ) throw 50000, 'Group.NotEmptyGroup', 1;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	delete from CK.tActorProfile where GroupId = @GroupId;
                                 | | | | | | | | | |   	delete from CK.tGroup where GroupId = @GroupId;
                                 | | | | | | | | | |   	delete from CK.tActor where ActorId = @GroupId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostDestroy />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3841672   | | | | | | | | | | GO
   2018-05-30 15h56.05.3861632 i | | | | | | | | | < 
   2018-05-30 15h56.05.3861632 i | | | | | | | | | > Installing []db^CK.sUserDestroy (unversioned).
   2018-05-30 15h56.05.3861632   | | | | | | | | | | if OBJECT_ID('CK.sUserDestroy') is not null drop Procedure CK.sUserDestroy;
   2018-05-30 15h56.05.3861632   | | | | | | | | | | GO
   2018-05-30 15h56.05.3911688   | | | | | | | | | | -- This will be transformed by []db^CK.UserGoogleTable([]db^CK.sUserDestroy), []db^CK.UserOidcTable([]db^CK.sUserDestroy), []db^CK.UserPasswordTable([]db^CK.sUserDestroy)
                                 | | | | | | | | | |   -- SetupConfig: { "Requires": [ "CK.sUserRemoveFromAllGroups" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Destroys a User: automatically removes it from any Groups it may belong to.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId <= 1 throw 50000, 'User.Undestroyable', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   if exists( select * from CK.tUser where UserId = @UserId )
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		--<PreDestroy revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserRemoveFromAllGroups @ActorId, @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		delete from CK.tActorProfile where ActorId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tUser where UserId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tActor where ActorId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostDestroy />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3911688   | | | | | | | | | | GO
   2018-05-30 15h56.05.3931519 i | | | | | | | | | < 
   2018-05-30 15h56.05.3931519 i | | | | | | | | | > Installing []db^CK.GroupTable (= 5.0.1 =).
   2018-05-30 15h56.05.3931519 i | | | | | | | | | < 
   2018-05-30 15h56.05.3931519 i | | | | | | | | | > Installing []db^CK.UserTable (= 5.0.3 =).
   2018-05-30 15h56.05.3931519 i | | | | | | | | | < 
   2018-05-30 15h56.05.3931519 i | | | | | | | | | > Installing []db^CK.ActorProfileTable.Head (= 5.0.0 =).
   2018-05-30 15h56.05.3931519 i | | | | | | | | | < 
   2018-05-30 15h56.05.3931519 i | | | | | | | | | > Installing []db^CK.ActorProfileTable (= 5.0.0 =).
   2018-05-30 15h56.05.3936499 i | | | | | | | | | < 
   2018-05-30 15h56.05.3936499 i | | | | | | | | | > Installing []db^CK.DB.Actor.Package (= 5.0.0 =).
   2018-05-30 15h56.05.3936499 i | | | | | | | | | < 
   2018-05-30 15h56.05.3936499 i | | | | | | | | | > Installing []db^CK.DB.Auth.Package.Head (= 1.0.0 =).
   2018-05-30 15h56.05.3936499 i | | | | | | | | | < 
   2018-05-30 15h56.05.3936499 i | | | | | | | | | > Installing []db^CK.AuthProviderTable.Head (= 1.0.2 =).
   2018-05-30 15h56.05.3936499 i | | | | | | | | | < 
   2018-05-30 15h56.05.3936499 i | | | | | | | | | > Installing []db^CK.sAuthUserOnLogin (unversioned).
   2018-05-30 15h56.05.3936499   | | | | | | | | | | if OBJECT_ID('CK.sAuthUserOnLogin') is not null drop Procedure CK.sAuthUserOnLogin;
   2018-05-30 15h56.05.3936499   | | | | | | | | | | GO
   2018-05-30 15h56.05.3961552   | | | | | | | | | | -- SetupConfig: { }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Both @FailureCode and @FailureReason can be set.
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   -- @LastLoginTime:  Last login time ('0001-01-01' for first login).</param>
                                 | | | | | | | | | |   -- @LoginTimeNow:   Current login time. This is the exact time that will become, on success, the LastLoginTime
                                 | | | | | | | | | |   --                  in the provider table.
                                 | | | | | | | | | |   -- @ActualLogin:    True for an actual login. False otherwise: only checks must be done.
                                 | | | | | | | | | |   -- @FailureCode:    To reject login, set this to a non null value (should be greater to 0).
                                 | | | | | | | | | |   -- @FailureReason:  Optional (may be deduced from @FailureCode). If set to a non null string and @FailureCode
                                 | | | | | | | | | |   --                  is not set, @FailureCode is set to 1 (Unspecified).
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   --  On output these 2 variables are normalized to be both null if login succeeds or non null on failure.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sAuthUserOnLogin
                                 | | | | | | | | | |   ( 
                                 | | | | | | | | | |   	@Scheme varchar(64),
                                 | | | | | | | | | |   	@LastLoginTime datetime2(2),
                                 | | | | | | | | | |   	@UserId int,
                                 | | | | | | | | | |       @ActualLogin bit,
                                 | | | | | | | | | |   	@LoginTimeNow datetime2(2),
                                 | | | | | | | | | |       @FailureCode int output,
                                 | | | | | | | | | |       @FailureReason nvarchar(255) output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<CheckLoginFailure />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       if @FailureReason is not null or @FailureCode is not null
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |           -- Normalize @FailureCode: always positive.
                                 | | | | | | | | | |           if @FailureCode is null or @FailureCode = 0 set @FailureCode = 1; -- Unspecified
                                 | | | | | | | | | |           else if @FailureCode < 0 set @FailureCode = -@FailureCode;
                                 | | | | | | | | | |           -- Normalize @FailureReason (trim) and back to null if empty.
                                 | | | | | | | | | |           set @FailureReason = rtrim(ltrim(@FailureReason));
                                 | | | | | | | | | |           if len(@FailureReason) = 0 set @FailureReason = null;
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       --<PostCheck />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       if @ActualLogin = 1
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |           if @FailureCode is null
                                 | | | | | | | | | |           begin
                                 | | | | | | | | | |               declare @unused1 int;
                                 | | | | | | | | | |               --<LoginSucceed />
                                 | | | | | | | | | |           end
                                 | | | | | | | | | |           else
                                 | | | | | | | | | |           begin
                                 | | | | | | | | | |               declare @unused2 int;
                                 | | | | | | | | | |               --<LoginFailed />
                                 | | | | | | | | | |           end
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.3966434   | | | | | | | | | | GO
   2018-05-30 15h56.05.3986403 i | | | | | | | | | < 
   2018-05-30 15h56.05.3986403 i | | | | | | | | | > Installing []db^CK.vUserAuthProvider (unversioned).
   2018-05-30 15h56.05.3986403   | | | | | | | | | | if OBJECT_ID('CK.vUserAuthProvider') is not null drop View CK.vUserAuthProvider;
   2018-05-30 15h56.05.3986403   | | | | | | | | | | GO
   2018-05-30 15h56.05.4011353   | | | | | | | | | | -- This will be transformed by []db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider), []db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider), []db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider)
                                 | | | | | | | | | |   -- SetupConfig: { } 
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   -- This view is an union all of selects injected by the different providers.
                                 | | | | | | | | | |   -- The first record is a fake one (filtered with an always false clause) that eases
                                 | | | | | | | | | |   -- the injection and describes the expected data model.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- The LastUsed can be '0001-01-01 00:00:00' (that is equal to DateTime.MinValue or CK.Core.Util.DateTime.UtcMinValue) 
                                 | | | | | | | | | |   -- in this view if a user has been registered in the provider but has not actually logged in yet.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- An exemple of a transformer (the one from Google provider):
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   --		-- SetupConfig: { "AddRequires": "Model.CK.UserGoogleTable" } 
                                 | | | | | | | | | |   --		-- 
                                 | | | | | | | | | |   --		create transformer on CK.vUserAuthProvider
                                 | | | | | | | | | |   --		as
                                 | | | | | | | | | |   --		begin
                                 | | | | | | | | | |   --			inject "
                                 | | | | | | | | | |   --			union all
                                 | | | | | | | | | |   --			select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   --			" after first part {select};
                                 | | | | | | | | | |   --		end
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create view CK.vUserAuthProvider( UserId, Scheme, LastUsed )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   	select	UserId = 0, Scheme = 'Scheme (ProviderName when IsMultiScheme = 0)', LastUsed = 'non null datetime2(2)' -- (provider table).LastLoginTime
                                 | | | | | | | | | |   		from CKCore.tSystem where 1 = 0;
   2018-05-30 15h56.05.4011353   | | | | | | | | | | GO
   2018-05-30 15h56.05.4021447 i | | | | | | | | | < 
   2018-05-30 15h56.05.4021447 i | | | | | | | | | > Installing []db^CK.sAuthProviderRegister (unversioned).
   2018-05-30 15h56.05.4026329   | | | | | | | | | | if OBJECT_ID('CK.sAuthProviderRegister') is not null drop Procedure CK.sAuthProviderRegister;
   2018-05-30 15h56.05.4026329   | | | | | | | | | | GO
   2018-05-30 15h56.05.4041412   | | | | | | | | | | -- SetupConfig: { } 
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   create procedure CK.sAuthProviderRegister
                                 | | | | | | | | | |   ( 
                                 | | | | | | | | | |   	@ActorId int, 
                                 | | | | | | | | | |   	@ProviderName varchar(64),
                                 | | | | | | | | | |   	@UserProviderSchemaTableName nvarchar(128),
                                 | | | | | | | | | |   	@IsMultiScheme bit,
                                 | | | | | | | | | |   	@AuthProviderIdResult int output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreCreate revert />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	insert CK.tAuthProvider( ProviderName, UserProviderSchemaTableName, IsMultiScheme ) 
                                 | | | | | | | | | |   		values( @ProviderName, @UserProviderSchemaTableName, @IsMultiScheme );
                                 | | | | | | | | | |   	set @AuthProviderIdResult = scope_identity();
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostCreate />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.4041412   | | | | | | | | | | GO
   2018-05-30 15h56.05.4061274 i | | | | | | | | | < 
   2018-05-30 15h56.05.4061274 i | | | | | | | | | > Installing []db^CK.sAuthUserInfoRead (unversioned).
   2018-05-30 15h56.05.4061274   | | | | | | | | | | if OBJECT_ID('CK.sAuthUserInfoRead') is not null drop Procedure CK.sAuthUserInfoRead;
   2018-05-30 15h56.05.4061274   | | | | | | | | | | GO
   2018-05-30 15h56.05.4086318   | | | | | | | | | | -- SetupConfig: { "Requires": "CK.vUserAuthProvider" } 
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   create procedure CK.sAuthUserInfoRead
                                 | | | | | | | | | |   ( 
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   	select UserId, UserName from CK.tUser with(nolock) where UserId = @UserId and @UserId > 0;
                                 | | | | | | | | | |   	select Scheme, LastUsed 
                                 | | | | | | | | | |   		from CK.vUserAuthProvider with(nolock) 
                                 | | | | | | | | | |   		where UserId = @UserId and LastUsed > '0001-01-01'
                                 | | | | | | | | | |   		order by LastUsed desc;
                                 | | | | | | | | | |   	return 0;
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.4091200   | | | | | | | | | | GO
   2018-05-30 15h56.05.4106198 i | | | | | | | | | < 
   2018-05-30 15h56.05.4106198 i | | | | | | | | | > Installing []db^CK.AuthProviderTable (= 1.0.2 =).
   2018-05-30 15h56.05.4106198 i | | | | | | | | | < 
   2018-05-30 15h56.05.4106198 i | | | | | | | | | > Installing []db^CK.DB.Auth.Package (= 1.0.0 =).
   2018-05-30 15h56.05.4106198 i | | | | | | | | | < 
   2018-05-30 15h56.05.4106198 i | | | | | | | | | > Installing []db^CK.DB.User.UserGoogle.Package.Head (= 1.0.0 =).
   2018-05-30 15h56.05.4106198 i | | | | | | | | | < 
   2018-05-30 15h56.05.4106198 i | | | | | | | | | > Installing []db^CK.DB.User.UserOidc.Package.Head (= 1.0.0 =).
   2018-05-30 15h56.05.4106198 i | | | | | | | | | < 
   2018-05-30 15h56.05.4106198 i | | | | | | | | | > Installing []db^CK.DB.User.UserPassword.Package.Head (= 1.0.1 =).
   2018-05-30 15h56.05.4106198 i | | | | | | | | | < 
   2018-05-30 15h56.05.4106198 i | | | | | | | | | > Installing []db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider) (unversioned).
   2018-05-30 15h56.05.4844800   | | | | | | | | | | Successfully applied 'inject "
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   	" after first part {select};'.
   2018-05-30 15h56.05.4854791   | | | | | | | | | | > Parsing transformation result.
   2018-05-30 15h56.05.4889715   | | | | | | | | | | < 
   2018-05-30 15h56.05.4924660   | | | | | | | | | | -- SetupConfig: { } 
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   -- This view is an union all of selects injected by the different providers.
                                 | | | | | | | | | |   -- The first record is a fake one (filtered with an always false clause) that eases
                                 | | | | | | | | | |   -- the injection and describes the expected data model.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- The LastUsed can be '0001-01-01 00:00:00' (that is equal to DateTime.MinValue or CK.Core.Util.DateTime.UtcMinValue) 
                                 | | | | | | | | | |   -- in this view if a user has been registered in the provider but has not actually logged in yet.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- An exemple of a transformer (the one from Google provider):
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   --		-- SetupConfig: { "AddRequires": "Model.CK.UserGoogleTable" } 
                                 | | | | | | | | | |   --		-- 
                                 | | | | | | | | | |   --		create transformer on CK.vUserAuthProvider
                                 | | | | | | | | | |   --		as
                                 | | | | | | | | | |   --		begin
                                 | | | | | | | | | |   --			inject "
                                 | | | | | | | | | |   --			union all
                                 | | | | | | | | | |   --			select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   --			" after first part {select};
                                 | | | | | | | | | |   --		end
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   alter view CK.vUserAuthProvider( UserId, Scheme, LastUsed )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   	select	UserId = 0, Scheme = 'Scheme (ProviderName when IsMultiScheme = 0)', LastUsed = 'non null datetime2(2)' -- (provider table).LastLoginTime
                                 | | | | | | | | | |   		from CKCore.tSystem where 1 = 0
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   	;
   2018-05-30 15h56.05.4924660   | | | | | | | | | | GO
   2018-05-30 15h56.05.4994520 i | | | | | | | | | < 
   2018-05-30 15h56.05.4994520 i | | | | | | | | | > Installing []db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider) (unversioned).
   2018-05-30 15h56.05.5024472   | | | | | | | | | | Successfully applied 'inject "
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, Scheme, LastLoginTime from CK.tUserOidc where UserId > 0
                                 | | | | | | | | | |   	" after first part {select};'.
   2018-05-30 15h56.05.5024472   | | | | | | | | | | > Parsing transformation result.
   2018-05-30 15h56.05.5034451   | | | | | | | | | | < 
   2018-05-30 15h56.05.5044446   | | | | | | | | | | -- SetupConfig: { } 
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   -- This view is an union all of selects injected by the different providers.
                                 | | | | | | | | | |   -- The first record is a fake one (filtered with an always false clause) that eases
                                 | | | | | | | | | |   -- the injection and describes the expected data model.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- The LastUsed can be '0001-01-01 00:00:00' (that is equal to DateTime.MinValue or CK.Core.Util.DateTime.UtcMinValue) 
                                 | | | | | | | | | |   -- in this view if a user has been registered in the provider but has not actually logged in yet.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- An exemple of a transformer (the one from Google provider):
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   --		-- SetupConfig: { "AddRequires": "Model.CK.UserGoogleTable" } 
                                 | | | | | | | | | |   --		-- 
                                 | | | | | | | | | |   --		create transformer on CK.vUserAuthProvider
                                 | | | | | | | | | |   --		as
                                 | | | | | | | | | |   --		begin
                                 | | | | | | | | | |   --			inject "
                                 | | | | | | | | | |   --			union all
                                 | | | | | | | | | |   --			select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   --			" after first part {select};
                                 | | | | | | | | | |   --		end
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   alter view CK.vUserAuthProvider( UserId, Scheme, LastUsed )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   	select	UserId = 0, Scheme = 'Scheme (ProviderName when IsMultiScheme = 0)', LastUsed = 'non null datetime2(2)' -- (provider table).LastLoginTime
                                 | | | | | | | | | |   		from CKCore.tSystem where 1 = 0
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, Scheme, LastLoginTime from CK.tUserOidc where UserId > 0
                                 | | | | | | | | | |   		union all
                                 | | | | | | | | | |   	select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   	;
   2018-05-30 15h56.05.5044446   | | | | | | | | | | GO
   2018-05-30 15h56.05.5067665 i | | | | | | | | | < 
   2018-05-30 15h56.05.5067665 i | | | | | | | | | > Installing []db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider) (unversioned).
   2018-05-30 15h56.05.5072573   | | | | | | | | | | Successfully applied 'inject "
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, 'Basic', case LastLoginTime when '0001-01-01' then null else LastLoginTime end from CK.tUserPassword where UserId > 0
                                 | | | | | | | | | |   	" after first part {select};'.
   2018-05-30 15h56.05.5072573   | | | | | | | | | | > Parsing transformation result.
   2018-05-30 15h56.05.5087581   | | | | | | | | | | < 
   2018-05-30 15h56.05.5097572   | | | | | | | | | | -- SetupConfig: { } 
                                 | | | | | | | | | |   -- 
                                 | | | | | | | | | |   -- This view is an union all of selects injected by the different providers.
                                 | | | | | | | | | |   -- The first record is a fake one (filtered with an always false clause) that eases
                                 | | | | | | | | | |   -- the injection and describes the expected data model.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- The LastUsed can be '0001-01-01 00:00:00' (that is equal to DateTime.MinValue or CK.Core.Util.DateTime.UtcMinValue) 
                                 | | | | | | | | | |   -- in this view if a user has been registered in the provider but has not actually logged in yet.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- An exemple of a transformer (the one from Google provider):
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   --		-- SetupConfig: { "AddRequires": "Model.CK.UserGoogleTable" } 
                                 | | | | | | | | | |   --		-- 
                                 | | | | | | | | | |   --		create transformer on CK.vUserAuthProvider
                                 | | | | | | | | | |   --		as
                                 | | | | | | | | | |   --		begin
                                 | | | | | | | | | |   --			inject "
                                 | | | | | | | | | |   --			union all
                                 | | | | | | | | | |   --			select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   --			" after first part {select};
                                 | | | | | | | | | |   --		end
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   alter view CK.vUserAuthProvider( UserId, Scheme, LastUsed )
                                 | | | | | | | | | |   as 
                                 | | | | | | | | | |   	select	UserId = 0, Scheme = 'Scheme (ProviderName when IsMultiScheme = 0)', LastUsed = 'non null datetime2(2)' -- (provider table).LastLoginTime
                                 | | | | | | | | | |   		from CKCore.tSystem where 1 = 0
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, 'Basic', case LastLoginTime when '0001-01-01' then null else LastLoginTime end from CK.tUserPassword where UserId > 0
                                 | | | | | | | | | |   	
                                 | | | | | | | | | |   	union all
                                 | | | | | | | | | |   	select UserId, Scheme, LastLoginTime from CK.tUserOidc where UserId > 0
                                 | | | | | | | | | |   		union all
                                 | | | | | | | | | |   	select UserId, 'Google', LastLoginTime from CK.tUserGoogle where UserId > 0
                                 | | | | | | | | | |   	;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   -- This has been transformed by []db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider), []db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider), []db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider)
   2018-05-30 15h56.05.5097572   | | | | | | | | | | GO
   2018-05-30 15h56.05.5137489 i | | | | | | | | | < 
   2018-05-30 15h56.05.5137489 i | | | | | | | | | > Installing []db^CK.UserGoogleTable.Head (= 2.0.1 =).
   2018-05-30 15h56.05.5137489 i | | | | | | | | | < 
   2018-05-30 15h56.05.5137489 i | | | | | | | | | > Installing []db^CK.UserOidcTable.Head (= 2.0.1 =).
   2018-05-30 15h56.05.5137489 i | | | | | | | | | < 
   2018-05-30 15h56.05.5137489 i | | | | | | | | | > Installing []db^CK.UserPasswordTable.Head (= 1.0.2 =).
   2018-05-30 15h56.05.5137489 i | | | | | | | | | < 
   2018-05-30 15h56.05.5137489 i | | | | | | | | | > Installing []db^CK.sUserGoogleDestroy (unversioned).
   2018-05-30 15h56.05.5142483   | | | | | | | | | | if OBJECT_ID('CK.sUserGoogleDestroy') is not null drop Procedure CK.sUserGoogleDestroy;
   2018-05-30 15h56.05.5142483   | | | | | | | | | | GO
   2018-05-30 15h56.05.5157450   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserGoogleDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId = 0 throw 50000, 'Argument.InvalidValue', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreDestroy revert /> 
                                 | | | | | | | | | |   	
                                 | | | | | | | | | |   	delete CK.tUserGoogle where UserId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostDestroy /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.5162439   | | | | | | | | | | GO
   2018-05-30 15h56.05.5182404 i | | | | | | | | | < 
   2018-05-30 15h56.05.5182404 i | | | | | | | | | > Installing []db^CK.sUserGoogleUCL (unversioned).
   2018-05-30 15h56.05.5187402   | | | | | | | | | | if OBJECT_ID('CK.sUserGoogleUCL') is not null drop Procedure CK.sUserGoogleUCL;
   2018-05-30 15h56.05.5187402   | | | | | | | | | | GO
   2018-05-30 15h56.05.5307175   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @GoogleAccountId can not be null. This is the key that identifies a Google user.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @Mode (flags): CreateOnly = 1, UpdateOnly = 2, CreateOrUpdate = 3, WithCheckLogin = 4, WithActualLogin = 8.
                                 | | | | | | | | | |   --                @Mode is normalized:
                                 | | | | | | | | | |   --                  - WithActualLogin implies WithCheckLogin.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @UCResult: None = 0, Created = 1, Updated = 2
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- When @UserId = 0 we are in "login mode": 
                                 | | | | | | | | | |   --  - @Mode must be UpdateOnly+WithCheckLogin (6) or UpdateOnly+WithActualLogin (10).
                                 | | | | | | | | | |   --    If the google id is found, we update what we have to and output the found @UserId.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- When @UserId is not 0, it must match with the one of the @GoogleAccountId otherwise it is an error
                                 | | | | | | | | | |   -- and an exception is thrown because:
                                 | | | | | | | | | |   --  - When updating it means that there is a mismatch of UserId/Google account in the calling code.
                                 | | | | | | | | | |   --  - When creating it means that another user with the same google account is already registered and
                                 | | | | | | | | | |   --    this should never happen.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- When extending this procedure, during update null parameters must be left unchanged.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserGoogleUCL
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int /*input*/output,
                                 | | | | | | | | | |   	@GoogleAccountId varchar(36), 
                                 | | | | | | | | | |   	@Mode int, -- not null enum { "CreateOnly" = 1, "UpdateOnly" = 2, "CreateOrUpdate" = 3, "WithCheckLogin" = 4, "WithActualLogin" = 8, "IgnoreOptimisticKey" = 16 }
                                 | | | | | | | | | |   	@UCResult int output, -- not null enum { None = 0, Created = 1, Updated = 2 }
                                 | | | | | | | | | |       @LoginFailureCode int output, -- Optional. Set by CK.sAuthUserOnLogin if login is rejected.
                                 | | | | | | | | | |       @LoginFailureReason nvarchar(255) output -- Optional.
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   	-- Clears IgnoreOptimisticKey since we do not use it here.
                                 | | | | | | | | | |   	set @Mode = (@Mode&~16);
                                 | | | | | | | | | |       if @Mode is null or @Mode < 1 or @Mode > 15 throw 50000, 'Argument.InvalidMode', 1;
                                 | | | | | | | | | |   	-- Handles @Mode: extracts @CheckLogin & @ActualLogin bit for readability.
                                 | | | | | | | | | |   	declare @CheckLogin bit = 0;
                                 | | | | | | | | | |   	declare @ActualLogin bit = 0;
                                 | | | | | | | | | |   	if (@Mode&8) <> 0 
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		set @ActualLogin = 1;
                                 | | | | | | | | | |           set @CheckLogin = 1;
                                 | | | | | | | | | |   		set @Mode = @Mode&~(4+8);
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |       else if (@Mode&4) <> 0
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |           set @CheckLogin = 1;
                                 | | | | | | | | | |   		set @Mode = @Mode&~4;
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       if @ActorId is null or @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId is null or @UserId < 0 throw 50000, 'Argument.InvalidUserId', 1;
                                 | | | | | | | | | |   	if @GoogleAccountId is null throw 50000, 'Argument.NullGoogleAccountId', 1;
                                 | | | | | | | | | |   	if @UserId = 0 and (@Mode <> 2 or @CheckLogin = 0) throw 50000, 'Argument.ForUserIdZeroModeMustBeUpdateOnlyWithLogin', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   declare @ActualUserId int;
                                 | | | | | | | | | |   	declare @LastLoginTime datetime2(2);
                                 | | | | | | | | | |   	declare @Now datetime2(2) = sysutcdatetime();
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	select	@ActualUserId = UserId,
                                 | | | | | | | | | |               @LastLoginTime = LastLoginTime
                                 | | | | | | | | | |   		from CK.tUserGoogle 
                                 | | | | | | | | | |   		where GoogleAccountId = @GoogleAccountId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PreCreateOrUpdate revert /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	if @ActualUserId is null
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		if (@Mode&1) <> 0 -- CreateOnly or CreateOrUpdate
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |               set @LastLoginTime = '0001-01-01';
                                 | | | | | | | | | |   			--<PreCreate revert /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			-- Unique constraint on GoogleAccountId will detect any existing UserId/GoogleAccountId clashes.
                                 | | | | | | | | | |   			insert into CK.tUserGoogle( UserId, GoogleAccountId, LastLoginTime ) 
                                 | | | | | | | | | |   				select	@UserId, 
                                 | | | | | | | | | |   						@GoogleAccountId, 
                                 | | | | | | | | | |   						@LastLoginTime;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			set @UCResult = 1; -- Created
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			--<PostCreate />
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   		else set @UCResult = 0; -- None
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	else
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		-- Updating an existing registration.
                                 | | | | | | | | | |   		if (@Mode&2) <> 0 -- UpdateOnly or CreateOrUpdate
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |   			-- When updating, we may be in "login mode" if @UserId is 0.
                                 | | | | | | | | | |   			-- But if we are not, the provided @UserId must match the actual one.
                                 | | | | | | | | | |   			if @UserId = 0 set @UserId = @ActualUserId;
                                 | | | | | | | | | |   			else if @UserId <> @ActualUserId throw 50000, 'Argument.UserIdAndGoogleIdMismatch', 1;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |               -- We have nothing to update since in case of login, LastLoginTime must be set
                                 | | | | | | | | | |               -- after having called CK.sAuthUserOnLogin.
                                 | | | | | | | | | |               -- This fake update is used as a placeholder for any actual updates that may be
                                 | | | | | | | | | |               -- injected by other packages.
                                 | | | | | | | | | |   			update CK.tUserGoogle set 
                                 | | | | | | | | | |   					LastLoginTime = LastLoginTime 
                                 | | | | | | | | | |   				where UserId = @ActualUserId and GoogleAccountId = @GoogleAccountId;
                                 | | | | | | | | | |   			set @UCResult = 2; -- Updated
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   		else set @UCResult = 0; -- None 
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       --<PostCreateOrUpdate />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	if @CheckLogin = 1
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |           -- If the user is not registered and we did not create it @LastLoginTime is null.
                                 | | | | | | | | | |           if @LastLoginTime is null set @LoginFailureCode = 2; -- UnregisteredUser
                                 | | | | | | | | | |           else
                                 | | | | | | | | | |           begin
                                 | | | | | | | | | |   		    exec CK.sAuthUserOnLogin 'Google', @LastLoginTime, @UserId, @ActualLogin, @Now, @LoginFailureCode output, @LoginFailureReason output;  
                                 | | | | | | | | | |               if @ActualLogin = 1 and @LoginFailureCode is null
                                 | | | | | | | | | |               begin
                                 | | | | | | | | | |   			    update CK.tUserGoogle set LastLoginTime = @Now
                                 | | | | | | | | | |                       where UserId = @UserId and GoogleAccountId = @GoogleAccountId;
                                 | | | | | | | | | |               end
                                 | | | | | | | | | |           end
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |       else set @LoginFailureCode = 0; -- None
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.5312186   | | | | | | | | | | GO
   2018-05-30 15h56.05.5342107 i | | | | | | | | | < 
   2018-05-30 15h56.05.5342107 i | | | | | | | | | > Installing []db^CK.sUserOidcDestroy (unversioned).
   2018-05-30 15h56.05.5347100   | | | | | | | | | | if OBJECT_ID('CK.sUserOidcDestroy') is not null drop Procedure CK.sUserOidcDestroy;
   2018-05-30 15h56.05.5347100   | | | | | | | | | | GO
   2018-05-30 15h56.05.5372054   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @SchemeSuffix: Scheme suffix to delete.
                                 | | | | | | | | | |   --                When null, all registrations for this provider regardless 
                                 | | | | | | | | | |   --                of the scheme suffix are deleted.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserOidcDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int,
                                 | | | | | | | | | |       @SchemeSuffix varchar(64)
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId = 0 throw 50000, 'Argument.InvalidValue', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreDestroy revert /> 
                                 | | | | | | | | | |   	
                                 | | | | | | | | | |       if @SchemeSuffix is null
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |   	    delete CK.tUserOidc where UserId = @UserId;
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |       else
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |   	    delete CK.tUserOidc where UserId = @UserId and SchemeSuffix = @SchemeSuffix;
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |   	--<PostDestroy /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.5372054   | | | | | | | | | | GO
   2018-05-30 15h56.05.5402011 i | | | | | | | | | < 
   2018-05-30 15h56.05.5402011 i | | | | | | | | | > Installing []db^CK.sUserOidcUCL (unversioned).
   2018-05-30 15h56.05.5406996   | | | | | | | | | | if OBJECT_ID('CK.sUserOidcUCL') is not null drop Procedure CK.sUserOidcUCL;
   2018-05-30 15h56.05.5406996   | | | | | | | | | | GO
   2018-05-30 15h56.05.5451901   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @SchemeSuffix and @Sub (the "subject") can not be null. This is the key that identifies a Oidc user.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @Mode (flags): CreateOnly = 1, UpdateOnly = 2, CreateOrUpdate = 3, WithCheckLogin = 4, WithActualLogin = 8.
                                 | | | | | | | | | |   --                @Mode is normalized:
                                 | | | | | | | | | |   --                  - WithActualLogin implies WithCheckLogin.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @UCResult: None = 0, Created = 1, Updated = 2
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- When @UserId = 0 we are in "login mode": 
                                 | | | | | | | | | |   --  - @Mode must be UpdateOnly+WithCheckLogin (6) or UpdateOnly+WithActualLogin (10).
                                 | | | | | | | | | |   --    If the @SchemeSuffix/@Sub is found, we update what we have to and output the found @UserId.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- When @UserId is not 0, it must match with the one of the @SchemeSuffix/@Sub otherwise it is an error
                                 | | | | | | | | | |   -- and an exception is thrown because:
                                 | | | | | | | | | |   --  - When updating it means that there is a mismatch of UserId vs. @SchemeSuffix/@Sub account in the
                                 | | | | | | | | | |   --    calling code.
                                 | | | | | | | | | |   --  - When creating it means that another user with the same google account is already registered and
                                 | | | | | | | | | |   --    this should never happen.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- When extending this procedure, during update null parameters must be left unchanged.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserOidcUCL
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int /*input*/output,
                                 | | | | | | | | | |   	@SchemeSuffix varchar(64),
                                 | | | | | | | | | |       @Sub nvarchar(64),
                                 | | | | | | | | | |   	@Mode int, -- not null enum { "CreateOnly" = 1, "UpdateOnly" = 2, "CreateOrUpdate" = 3, "WithCheckLogin" = 4, "WithActualLogin" = 8, "IgnoreOptimisticKey" = 16 }
                                 | | | | | | | | | |   	@UCResult int output, -- not null enum { None = 0, Created = 1, Updated = 2 }
                                 | | | | | | | | | |       @LoginFailureCode int output, -- Optional. Set by CK.sAuthUserOnLogin if login is rejected.
                                 | | | | | | | | | |       @LoginFailureReason nvarchar(255) output -- Optional. Set by CK.sAuthUserOnLogin if login is rejected.
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   	-- Clears IgnoreOptimisticKey since we do not use it here.
                                 | | | | | | | | | |   	set @Mode = (@Mode&~16);
                                 | | | | | | | | | |       if @Mode is null or @Mode < 1 or @Mode > 15 throw 50000, 'Argument.InvalidMode', 1;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	-- Handles @Mode: extracts @CheckLogin & @ActualLogin bit for readability.
                                 | | | | | | | | | |   	declare @CheckLogin bit = 0;
                                 | | | | | | | | | |   	declare @ActualLogin bit = 0;
                                 | | | | | | | | | |   	if (@Mode&8) <> 0 
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		set @ActualLogin = 1;
                                 | | | | | | | | | |           set @CheckLogin = 1;
                                 | | | | | | | | | |   		set @Mode = @Mode&~(4+8);
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |       else if (@Mode&4) <> 0
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |           set @CheckLogin = 1;
                                 | | | | | | | | | |   		set @Mode = @Mode&~4;
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       if @ActorId is null or @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId is null or @UserId < 0 throw 50000, 'Argument.InvalidUserId', 1;
                                 | | | | | | | | | |   	if @SchemeSuffix is null throw 50000, 'Argument.NullSchemeSuffix', 1;
                                 | | | | | | | | | |       set @SchemeSuffix = LTrim(RTrim(@SchemeSuffix));
                                 | | | | | | | | | |   	if @Sub is null throw 50000, 'Argument.NullSub', 1;
                                 | | | | | | | | | |   	if @UserId = 0 and (@Mode <> 2 or @CheckLogin = 0) throw 50000, 'Argument.ForUserIdZeroModeMustBeUpdateOnlyWithLogin', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   declare @ActualUserId int;
                                 | | | | | | | | | |   	declare @LastLoginTime datetime2(2);
                                 | | | | | | | | | |   	declare @Now datetime2(2) = sysutcdatetime();
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	select	@ActualUserId = UserId,
                                 | | | | | | | | | |               @LastLoginTime = LastLoginTime
                                 | | | | | | | | | |   		from CK.tUserOidc 
                                 | | | | | | | | | |   		where SchemeSuffix = @SchemeSuffix and Sub = @Sub;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PreCreateOrUpdate revert /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	if @ActualUserId is null
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		if (@Mode&1) <> 0 -- CreateOnly or CreateOrUpdate
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |               set @LastLoginTime = '0001-01-01';
                                 | | | | | | | | | |   			--<PreCreate revert /> 
                                 | | | | | | | | | |   			-- Unique constraint on SchemeSuffix/Sub will detect any existing UserId vs. SchemeSuffix/Sub clashes.
                                 | | | | | | | | | |   			insert into CK.tUserOidc( UserId, SchemeSuffix, Sub, LastLoginTime ) 
                                 | | | | | | | | | |   				select	@UserId, 
                                 | | | | | | | | | |   						@SchemeSuffix, 
                                 | | | | | | | | | |   						@Sub, 
                                 | | | | | | | | | |   						@LastLoginTime;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			set @UCResult = 1; -- Created
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			--<PostCreate />
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   		else set @UCResult = 0; -- None
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	else
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		-- Updating an existing registration.
                                 | | | | | | | | | |   		if (@Mode&2) <> 0 -- UpdateOnly or CreateOrUpdate
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |   			-- When updating, we may be in "login mode" if @UserId is 0.
                                 | | | | | | | | | |   			-- But if we are not, the provided @UserId must match the actual one.
                                 | | | | | | | | | |   			if @UserId = 0 set @UserId = @ActualUserId;
                                 | | | | | | | | | |   			else if @UserId <> @ActualUserId throw 50000, 'Argument.UserIdAndSchemeSuffixSubMismatch', 1;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			--<PreUpdate revert /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |               -- We have nothing to update since in case of login, LastLoginTime must be set
                                 | | | | | | | | | |               -- after having called CK.sAuthUserOnLogin.
                                 | | | | | | | | | |               -- This fake update is used as a placeholder for any actual updates that may be
                                 | | | | | | | | | |               -- injected by other packages.
                                 | | | | | | | | | |   			update CK.tUserOidc set 
                                 | | | | | | | | | |   					LastLoginTime = LastLoginTime
                                 | | | | | | | | | |   				where UserId = @ActualUserId and SchemeSuffix = @SchemeSuffix and Sub = @Sub;
                                 | | | | | | | | | |   			--<PostUpdate />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   			set @UCResult = 2; -- Updated
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   		else set @UCResult = 0; -- None 
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostCreateOrUpdate />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	if @CheckLogin = 1
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |           -- If the user is not registered and we did not create it @LastLoginTime is null.
                                 | | | | | | | | | |           if @LastLoginTime is null set @LoginFailureCode = 2; -- UnregisteredUser
                                 | | | | | | | | | |           else
                                 | | | | | | | | | |           begin
                                 | | | | | | | | | |               declare @SchemeFull varchar(64) = @SchemeSuffix;
                                 | | | | | | | | | |               if len(@SchemeFull) = 0 
                                 | | | | | | | | | |               begin
                                 | | | | | | | | | |                   set @SchemeFull = 'Oidc';
                                 | | | | | | | | | |               end
                                 | | | | | | | | | |               else
                                 | | | | | | | | | |               begin
                                 | | | | | | | | | |                   set @SchemeFull = 'Oidc.'+@SchemeFull;
                                 | | | | | | | | | |               end
                                 | | | | | | | | | |   		    exec CK.sAuthUserOnLogin @SchemeFull, @LastLoginTime, @UserId, @ActualLogin, @Now, @LoginFailureCode output, @LoginFailureReason output;  
                                 | | | | | | | | | |               if @ActualLogin = 1 and @LoginFailureCode is null
                                 | | | | | | | | | |               begin
                                 | | | | | | | | | |   			    update CK.tUserOidc set LastLoginTime = @Now
                                 | | | | | | | | | |                       where UserId = @UserId and SchemeSuffix = @SchemeSuffix and Sub = @Sub;
                                 | | | | | | | | | |               end
                                 | | | | | | | | | |   	    end
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |       else set @LoginFailureCode = 0; -- None
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.5456904   | | | | | | | | | | GO
   2018-05-30 15h56.05.5491836 i | | | | | | | | | < 
   2018-05-30 15h56.05.5491836 i | | | | | | | | | > Installing []db^CK.sUserPasswordDestroy (unversioned).
   2018-05-30 15h56.05.5496821   | | | | | | | | | | if OBJECT_ID('CK.sUserPasswordDestroy') is not null drop Procedure CK.sUserPasswordDestroy;
   2018-05-30 15h56.05.5496821   | | | | | | | | | | GO
   2018-05-30 15h56.05.5511792   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserPasswordDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId = 0 throw 50000, 'Argument.InvalidValue', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   --<PreDestroy revert /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	delete CK.tUserPassword where UserId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	--<PostDestroy /> 
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.5511792   | | | | | | | | | | GO
   2018-05-30 15h56.05.5536746 i | | | | | | | | | < 
   2018-05-30 15h56.05.5536746 i | | | | | | | | | > Installing []db^CK.sUserPasswordUCL (unversioned).
   2018-05-30 15h56.05.5541740   | | | | | | | | | | if OBJECT_ID('CK.sUserPasswordUCL') is not null drop Procedure CK.sUserPasswordUCL;
   2018-05-30 15h56.05.5541740   | | | | | | | | | | GO
   2018-05-30 15h56.05.5586650   | | | | | | | | | | -- SetupConfig: {}
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- @Mode: CreateOnly = 1, UpdateOnly = 2, CreateOrUpdate = 3, WithCheckLogin = 4, WithActualLogin = 8
                                 | | | | | | | | | |   -- @UCResult: None = 0, Created = 1, Updated = 2
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   create procedure CK.sUserPasswordUCL
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int /*input*/output, 
                                 | | | | | | | | | |   	@PwdHash varbinary(64),
                                 | | | | | | | | | |   	@Mode int, -- not null enum { "CreateOnly" = 1, "UpdateOnly" = 2, "CreateOrUpdate" = 3, "WithCheckLogin" = 4, "WithActualLogin" = 8, "IgnoreOptimisticKey" = 16 }
                                 | | | | | | | | | |   	@UCResult int output, -- not null enum { None = 0, Created = 1, Updated = 2 }
                                 | | | | | | | | | |       @LoginFailureCode int /*input*/output,
                                 | | | | | | | | | |       @LoginFailureReason nvarchar(255) output
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as
                                 | | | | | | | | | |   begin
                                 | | | | | | | | | |   	-- Clears IgnoreOptimisticKey since we do not use it here.
                                 | | | | | | | | | |   	set @Mode = (@Mode&~16);
                                 | | | | | | | | | |       if @Mode is null or @Mode < 1 or @Mode > 15 throw 50000, 'Argument.InvalidMode', 1;
                                 | | | | | | | | | |   	-- Handles @Mode: extracts @CheckLogin & @ActualLogin bit for readability.
                                 | | | | | | | | | |   	declare @CheckLogin bit = 0;
                                 | | | | | | | | | |   	declare @ActualLogin bit = 0;
                                 | | | | | | | | | |   	if (@Mode&8) <> 0 
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		set @ActualLogin = 1;
                                 | | | | | | | | | |           set @CheckLogin = 1;
                                 | | | | | | | | | |   		set @Mode = @Mode&~(4+8);
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |       else if (@Mode&4) <> 0
                                 | | | | | | | | | |       begin
                                 | | | | | | | | | |           set @CheckLogin = 1;
                                 | | | | | | | | | |   		set @Mode = @Mode&~4;
                                 | | | | | | | | | |       end
                                 | | | | | | | | | |   	if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId <= 0 throw 50000, 'Argument.InvalidUserId', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   declare @LastLoginTime datetime2(2);
                                 | | | | | | | | | |   	declare @Now datetime2(2) = sysutcdatetime();
                                 | | | | | | | | | |   	select @LastLoginTime = LastLoginTime from CK.tUserPassword where UserId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	if @LastLoginTime is null
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		if (@Mode&1) <> 0
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |   	        if @PwdHash is null or DataLength(@PwdHash) = 0 throw 50000, 'Argument.InvalidUserPwdHash', 1;
                                 | | | | | | | | | |   			set @LastLoginTime = '0001-01-01';
                                 | | | | | | | | | |   			--<PreCreate revert /> 
                                 | | | | | | | | | |   			insert into CK.tUserPassword( UserId, PwdHash, LastWriteTime, LastLoginTime )
                                 | | | | | | | | | |                   values( @UserId, @PwdHash, @Now, @LastLoginTime);
                                 | | | | | | | | | |   			set @UCResult = 1;
                                 | | | | | | | | | |   			--<PostCreate /> 
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   		else set @UCResult = 0;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   	else
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		if (@Mode&2) <> 0
                                 | | | | | | | | | |   		begin
                                 | | | | | | | | | |   	        if @PwdHash is not null and DataLength(@PwdHash) = 0 throw 50000, 'Argument.InvalidUserPwdHash', 1;
                                 | | | | | | | | | |   			--<PreUpdate revert /> 
                                 | | | | | | | | | |   			update CK.tUserPassword set
                                 | | | | | | | | | |                   PwdHash = case when @PwdHash is null then PwdHash else @PwdHash end,
                                 | | | | | | | | | |                   LastWriteTime = case when @PwdHash is null then @Now else LastWriteTime end
                                 | | | | | | | | | |                 where UserId = @UserId;
                                 | | | | | | | | | |   			set @UCResult = 2;
                                 | | | | | | | | | |   			--<PostUpdate />
                                 | | | | | | | | | |   		end
                                 | | | | | | | | | |   		else set @UCResult = 0;
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   
                                 | | | | | | | | | |       if @CheckLogin = 1
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |           if @LastLoginTime is null set @LoginFailureCode = 2; -- UnregisteredUser
                                 | | | | | | | | | |           else
                                 | | | | | | | | | |           begin
                                 | | | | | | | | | |   		    exec CK.sAuthUserOnLogin 'Basic', @LastLoginTime, @UserId, @ActualLogin, @Now, @LoginFailureCode output, @LoginFailureReason output;
                                 | | | | | | | | | |               if @ActualLogin = 1 and @LoginFailureCode is null
                                 | | | | | | | | | |               begin
                                 | | | | | | | | | |   			    update CK.tUserPassword set LastLoginTime = @Now where UserId = @UserId;
                                 | | | | | | | | | |               end
                                 | | | | | | | | | |           end
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |       else set @LoginFailureCode = 0; -- None
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.5586650   | | | | | | | | | | GO
   2018-05-30 15h56.05.5616598 i | | | | | | | | | < 
   2018-05-30 15h56.05.5616598 i | | | | | | | | | > Installing []db^CK.UserGoogleTable([]db^CK.sUserDestroy) (unversioned).
   2018-05-30 15h56.05.5975921   | | | | | | | | | | Successfully applied 'inject "
                                 | | | | | | | | | |   		exec CK.sUserGoogleDestroy @ActorId, @UserId;
                                 | | | | | | | | | |   	" into "PreDestroy";'.
   2018-05-30 15h56.05.5980919   | | | | | | | | | | > Parsing transformation result.
   2018-05-30 15h56.05.5990901   | | | | | | | | | | < 
   2018-05-30 15h56.05.6005886   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sUserRemoveFromAllGroups" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Destroys a User: automatically removes it from any Groups it may belong to.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   alter procedure CK.sUserDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId <= 1 throw 50000, 'User.Undestroyable', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   if exists( select * from CK.tUser where UserId = @UserId )
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		--<PreDestroy revert >
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserGoogleDestroy @ActorId, @UserId;
                                 | | | | | | | | | |   --</PreDestroy>
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserRemoveFromAllGroups @ActorId, @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		delete from CK.tActorProfile where ActorId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tUser where UserId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tActor where ActorId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostDestroy />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.6005886   | | | | | | | | | | GO
   2018-05-30 15h56.05.6060770 i | | | | | | | | | < 
   2018-05-30 15h56.05.6060770 i | | | | | | | | | > Installing []db^CK.UserOidcTable([]db^CK.sUserDestroy) (unversioned).
   2018-05-30 15h56.05.6075737   | | | | | | | | | | Successfully applied 'inject "
                                 | | | | | | | | | |   		exec CK.sUserOidcDestroy @ActorId, @UserId, null;
                                 | | | | | | | | | |   	" into "PreDestroy";'.
   2018-05-30 15h56.05.6075737   | | | | | | | | | | > Parsing transformation result.
   2018-05-30 15h56.05.6085720   | | | | | | | | | | < 
   2018-05-30 15h56.05.6095716   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sUserRemoveFromAllGroups" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Destroys a User: automatically removes it from any Groups it may belong to.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   alter procedure CK.sUserDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId <= 1 throw 50000, 'User.Undestroyable', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   if exists( select * from CK.tUser where UserId = @UserId )
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		--<PreDestroy revert >
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserOidcDestroy @ActorId, @UserId, null;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserGoogleDestroy @ActorId, @UserId;
                                 | | | | | | | | | |   --</PreDestroy>
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserRemoveFromAllGroups @ActorId, @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		delete from CK.tActorProfile where ActorId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tUser where UserId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tActor where ActorId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostDestroy />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
   2018-05-30 15h56.05.6095716   | | | | | | | | | | GO
   2018-05-30 15h56.05.6120665 i | | | | | | | | | < 
   2018-05-30 15h56.05.6120665 i | | | | | | | | | > Installing []db^CK.UserPasswordTable([]db^CK.sUserDestroy) (unversioned).
   2018-05-30 15h56.05.6125655   | | | | | | | | | | Successfully applied 'inject "
                                 | | | | | | | | | |   		exec CK.sUserPasswordDestroy @ActorId, @UserId;
                                 | | | | | | | | | |   	" into "PreDestroy";'.
   2018-05-30 15h56.05.6130644   | | | | | | | | | | > Parsing transformation result.
   2018-05-30 15h56.05.6135637   | | | | | | | | | | < 
   2018-05-30 15h56.05.6150604   | | | | | | | | | | -- SetupConfig: { "Requires": [ "CK.sUserRemoveFromAllGroups" ] }
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   -- Destroys a User: automatically removes it from any Groups it may belong to.
                                 | | | | | | | | | |   --
                                 | | | | | | | | | |   alter procedure CK.sUserDestroy
                                 | | | | | | | | | |   (
                                 | | | | | | | | | |   	@ActorId int,
                                 | | | | | | | | | |   	@UserId int
                                 | | | | | | | | | |   )
                                 | | | | | | | | | |   as begin
                                 | | | | | | | | | |       if @ActorId <= 0 throw 50000, 'Security.AnonymousNotAllowed', 1;
                                 | | | | | | | | | |       if @UserId <= 1 throw 50000, 'User.Undestroyable', 1;
                                 | | | | | | | | | |   --[=beginsp]
                                 | | | | | | | | | |   set nocount on; declare @SPCallTC int = @@TRANCOUNT, @SPCallId sysname; 
                                 | | | | | | | | | |   beginsp: if @SPCallTC = 0 begin tran; else begin set @SPCallId = cast(32*cast(@@PROCID as bigint)+@@NESTLEVEL as varchar); save transaction @SPCallId; end begin try
                                 | | | | | | | | | |   --[=/beginsp]
                                 | | | | | | | | | |   if exists( select * from CK.tUser where UserId = @UserId )
                                 | | | | | | | | | |   	begin
                                 | | | | | | | | | |   		--<PreDestroy revert >
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserPasswordDestroy @ActorId, @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserOidcDestroy @ActorId, @UserId, null;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserGoogleDestroy @ActorId, @UserId;
                                 | | | | | | | | | |   --</PreDestroy>
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		exec CK.sUserRemoveFromAllGroups @ActorId, @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		delete from CK.tActorProfile where ActorId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tUser where UserId = @UserId;
                                 | | | | | | | | | |   		delete from CK.tActor where ActorId = @UserId;
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   		--<PostDestroy />
                                 | | | | | | | | | |   
                                 | | | | | | | | | |   	end
                                 | | | | | | | | | |   --[=endsp]
                                 | | | | | | | | | |   end try
                                 | | | | | | | | | |   begin catch if @SPCallTC = 0 rollback; else if XACT_STATE() = 1 rollback transaction @SPCallId; exec CKCore.sErrorRethrow @@ProcId; return -1; end catch;
                                 | | | | | | | | | |   endsp: if @SPCallTC = 0 commit; return 0;
                                 | | | | | | | | | |   --[=/endsp]
                                 | | | | | | | | | |   end
                                 | | | | | | | | | |   -- This has been transformed by []db^CK.UserGoogleTable([]db^CK.sUserDestroy), []db^CK.UserOidcTable([]db^CK.sUserDestroy), []db^CK.UserPasswordTable([]db^CK.sUserDestroy)
   2018-05-30 15h56.05.6150604   | | | | | | | | | | GO
   2018-05-30 15h56.05.6210500 i | | | | | | | | | < 
   2018-05-30 15h56.05.6210500 i | | | | | | | | | > Installing []db^CK.vUserAuthProvider#transform (unversioned).
   2018-05-30 15h56.05.6210500 i | | | | | | | | | < 
   2018-05-30 15h56.05.6210500 i | | | | | | | | | > Installing []db^CK.sUserDestroy#transform (unversioned).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^CK.UserGoogleTable (= 2.0.1 =).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^CK.UserOidcTable (= 2.0.1 =).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^CK.UserPasswordTable (= 1.0.2 =).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^CK.DB.User.UserGoogle.Package (= 1.0.0 =).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^CK.DB.User.UserOidc.Package (= 1.0.0 =).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^CK.DB.User.UserPassword.Package (= 1.0.1 =).
   2018-05-30 15h56.05.6215484 i | | | | | | | | | < 
   2018-05-30 15h56.05.6215484 i | | | | | | | | | > Installing []db^SqlDatabase (unversioned).
   2018-05-30 15h56.05.6220473 i | | | | | | | | | < 
   2018-05-30 15h56.05.6220473 i | | | | | | | | < 
   2018-05-30 15h56.05.6220473 i | | | | | | | | > Settle step.
   2018-05-30 15h56.05.6230474   | | | | | | | | | > Raising Settle setup event.
   2018-05-30 15h56.05.6230474   | | | | | | | | | < 
   2018-05-30 15h56.05.6230474 i | | | | | | | | | > Settling []CK._g.poco.Factory.
   2018-05-30 15h56.05.6250412 i | | | | | | | | | < 
   2018-05-30 15h56.05.6250412 i | | | | | | | | | > Settling []db^SqlDatabase.Connection.
   2018-05-30 15h56.05.6250412 i | | | | | | | | | < 
   2018-05-30 15h56.05.6250412 i | | | | | | | | | > Settling []db^Model.SqlDatabase.Head.
   2018-05-30 15h56.05.6255405 i | | | | | | | | | < 
   2018-05-30 15h56.05.6255405 i | | | | | | | | | > Settling []db^Model.CK.DB.Actor.Package.Head.
   2018-05-30 15h56.05.6255405 i | | | | | | | | | < 
   2018-05-30 15h56.05.6255405 i | | | | | | | | | > Settling []db^Model.CK.ActorTable.Head.
   2018-05-30 15h56.05.6255405 i | | | | | | | | | < 
   2018-05-30 15h56.05.6255405 i | | | | | | | | | > Settling []db^Model.CK.ActorTable.
   2018-05-30 15h56.05.6265383 i | | | | | | | | | < 
   2018-05-30 15h56.05.6265383 i | | | | | | | | | > Settling []db^Model.CK.GroupTable.Head.
   2018-05-30 15h56.05.6265383 i | | | | | | | | | < 
   2018-05-30 15h56.05.6265383 i | | | | | | | | | > Settling []db^Model.CK.UserTable.Head.
   2018-05-30 15h56.05.6265383 i | | | | | | | | | < 
   2018-05-30 15h56.05.6265383 i | | | | | | | | | > Settling []db^Model.CK.GroupTable.
   2018-05-30 15h56.05.6265383 i | | | | | | | | | < 
   2018-05-30 15h56.05.6265383 i | | | | | | | | | > Settling []db^Model.CK.UserTable.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.ActorProfileTable.Head.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.ActorProfileTable.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.DB.Actor.Package.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.DB.Auth.Package.Head.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.AuthProviderTable.Head.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.AuthProviderTable.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.DB.Auth.Package.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.DB.User.UserGoogle.Package.Head.
   2018-05-30 15h56.05.6270381 i | | | | | | | | | < 
   2018-05-30 15h56.05.6270381 i | | | | | | | | | > Settling []db^Model.CK.DB.User.UserOidc.Package.Head.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.DB.User.UserPassword.Package.Head.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.UserGoogleTable.Head.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.UserOidcTable.Head.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.UserPasswordTable.Head.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.UserGoogleTable.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.UserOidcTable.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.UserPasswordTable.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6275379 i | | | | | | | | | > Settling []db^Model.CK.DB.User.UserGoogle.Package.
   2018-05-30 15h56.05.6275379 i | | | | | | | | | < 
   2018-05-30 15h56.05.6280364 i | | | | | | | | | > Settling []db^Model.CK.DB.User.UserOidc.Package.
   2018-05-30 15h56.05.6280364 i | | | | | | | | | < 
   2018-05-30 15h56.05.6280364 i | | | | | | | | | > Settling []db^Model.CK.DB.User.UserPassword.Package.
   2018-05-30 15h56.05.6280364 i | | | | | | | | | < 
   2018-05-30 15h56.05.6280364 i | | | | | | | | | > Settling []db^Model.SqlDatabase.
   2018-05-30 15h56.05.6280364 i | | | | | | | | | < 
   2018-05-30 15h56.05.6280364 i | | | | | | | | | > Settling []db^SqlDatabase.Head.
   2018-05-30 15h56.05.6280364 i | | | | | | | | | < 
   2018-05-30 15h56.05.6280364 i | | | | | | | | | > Settling []db^CK.DB.Actor.Package.Head.
   2018-05-30 15h56.05.6280364 i | | | | | | | | | < 
   2018-05-30 15h56.05.6280364 i | | | | | | | | | > Settling []db^CK.ActorTable.Head.
   2018-05-30 15h56.05.6280364 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.sActorCreate.
   2018-05-30 15h56.05.6285349 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.ActorTable.
   2018-05-30 15h56.05.6285349 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.GroupTable.Head.
   2018-05-30 15h56.05.6285349 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.UserTable.Head.
   2018-05-30 15h56.05.6285349 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.sGroupCreate.
   2018-05-30 15h56.05.6285349 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.sGroupUserAdd.
   2018-05-30 15h56.05.6285349 i | | | | | | | | | < 
   2018-05-30 15h56.05.6285349 i | | | | | | | | | > Settling []db^CK.sGroupUserRemove.
   2018-05-30 15h56.05.6290347 i | | | | | | | | | < 
   2018-05-30 15h56.05.6290347 i | | | | | | | | | > Settling []db^CK.sUserCreate.
   2018-05-30 15h56.05.6290347 i | | | | | | | | | < 
   2018-05-30 15h56.05.6290347 i | | | | | | | | | > Settling []db^CK.sUserUserNameSet.
   2018-05-30 15h56.05.6290347 i | | | | | | | | | < 
   2018-05-30 15h56.05.6290347 i | | | | | | | | | > Settling []db^CK.vGroup.
   2018-05-30 15h56.05.6290347 i | | | | | | | | | < 
   2018-05-30 15h56.05.6290347 i | | | | | | | | | > Settling []db^CK.vUser.
   2018-05-30 15h56.05.6290347 i | | | | | | | | | < 
   2018-05-30 15h56.05.6290347 i | | | | | | | | | > Settling []db^CK.sGroupRemoveAllUsers.
   2018-05-30 15h56.05.6290347 i | | | | | | | | | < 
   2018-05-30 15h56.05.6290347 i | | | | | | | | | > Settling []db^CK.sUserRemoveFromAllGroups.
   2018-05-30 15h56.05.6295336 i | | | | | | | | | < 
   2018-05-30 15h56.05.6295336 i | | | | | | | | | > Settling []db^CK.sGroupDestroy.
   2018-05-30 15h56.05.6295336 i | | | | | | | | | < 
   2018-05-30 15h56.05.6295336 i | | | | | | | | | > Settling []db^CK.sUserDestroy.
   2018-05-30 15h56.05.6295336 i | | | | | | | | | < 
   2018-05-30 15h56.05.6295336 i | | | | | | | | | > Settling []db^CK.GroupTable.
   2018-05-30 15h56.05.6295336 i | | | | | | | | | < 
   2018-05-30 15h56.05.6295336 i | | | | | | | | | > Settling []db^CK.UserTable.
   2018-05-30 15h56.05.6295336 i | | | | | | | | | < 
   2018-05-30 15h56.05.6295336 i | | | | | | | | | > Settling []db^CK.ActorProfileTable.Head.
   2018-05-30 15h56.05.6300329 i | | | | | | | | | < 
   2018-05-30 15h56.05.6300329 i | | | | | | | | | > Settling []db^CK.ActorProfileTable.
   2018-05-30 15h56.05.6300329 i | | | | | | | | | < 
   2018-05-30 15h56.05.6300329 i | | | | | | | | | > Settling []db^CK.DB.Actor.Package.
   2018-05-30 15h56.05.6300329 i | | | | | | | | | < 
   2018-05-30 15h56.05.6300329 i | | | | | | | | | > Settling []db^CK.DB.Auth.Package.Head.
   2018-05-30 15h56.05.6300329 i | | | | | | | | | < 
   2018-05-30 15h56.05.6300329 i | | | | | | | | | > Settling []db^CK.AuthProviderTable.Head.
   2018-05-30 15h56.05.6300329 i | | | | | | | | | < 
   2018-05-30 15h56.05.6300329 i | | | | | | | | | > Settling []db^CK.sAuthUserOnLogin.
   2018-05-30 15h56.05.6305318 i | | | | | | | | | < 
   2018-05-30 15h56.05.6305318 i | | | | | | | | | > Settling []db^CK.vUserAuthProvider.
   2018-05-30 15h56.05.6305318 i | | | | | | | | | < 
   2018-05-30 15h56.05.6305318 i | | | | | | | | | > Settling []db^CK.sAuthProviderRegister.
   2018-05-30 15h56.05.6305318 i | | | | | | | | | < 
   2018-05-30 15h56.05.6305318 i | | | | | | | | | > Settling []db^CK.sAuthUserInfoRead.
   2018-05-30 15h56.05.6305318 i | | | | | | | | | < 
   2018-05-30 15h56.05.6305318 i | | | | | | | | | > Settling []db^CK.AuthProviderTable.
   2018-05-30 15h56.05.6305318 i | | | | | | | | | < 
   2018-05-30 15h56.05.6310307 i | | | | | | | | | > Settling []db^CK.DB.Auth.Package.
   2018-05-30 15h56.05.6310307 i | | | | | | | | | < 
   2018-05-30 15h56.05.6310307 i | | | | | | | | | > Settling []db^CK.DB.User.UserGoogle.Package.Head.
   2018-05-30 15h56.05.6310307 i | | | | | | | | | < 
   2018-05-30 15h56.05.6310307 i | | | | | | | | | > Settling []db^CK.DB.User.UserOidc.Package.Head.
   2018-05-30 15h56.05.6310307 i | | | | | | | | | < 
   2018-05-30 15h56.05.6310307 i | | | | | | | | | > Settling []db^CK.DB.User.UserPassword.Package.Head.
   2018-05-30 15h56.05.6310307 i | | | | | | | | | < 
   2018-05-30 15h56.05.6310307 i | | | | | | | | | > Settling []db^CK.DB.User.UserGoogle.Package([]db^CK.vUserAuthProvider).
   2018-05-30 15h56.05.6315296 i | | | | | | | | | < 
   2018-05-30 15h56.05.6315296 i | | | | | | | | | > Settling []db^CK.DB.User.UserOidc.Package([]db^CK.vUserAuthProvider).
   2018-05-30 15h56.05.6315296 i | | | | | | | | | < 
   2018-05-30 15h56.05.6315296 i | | | | | | | | | > Settling []db^CK.DB.User.UserPassword.Package([]db^CK.vUserAuthProvider).
   2018-05-30 15h56.05.6315296 i | | | | | | | | | < 
   2018-05-30 15h56.05.6315296 i | | | | | | | | | > Settling []db^CK.UserGoogleTable.Head.
   2018-05-30 15h56.05.6315296 i | | | | | | | | | < 
   2018-05-30 15h56.05.6315296 i | | | | | | | | | > Settling []db^CK.UserOidcTable.Head.
   2018-05-30 15h56.05.6315296 i | | | | | | | | | < 
   2018-05-30 15h56.05.6315296 i | | | | | | | | | > Settling []db^CK.UserPasswordTable.Head.
   2018-05-30 15h56.05.6320285 i | | | | | | | | | < 
   2018-05-30 15h56.05.6320285 i | | | | | | | | | > Settling []db^CK.sUserGoogleDestroy.
   2018-05-30 15h56.05.6320285 i | | | | | | | | | < 
   2018-05-30 15h56.05.6320285 i | | | | | | | | | > Settling []db^CK.sUserGoogleUCL.
   2018-05-30 15h56.05.6320285 i | | | | | | | | | < 
   2018-05-30 15h56.05.6320285 i | | | | | | | | | > Settling []db^CK.sUserOidcDestroy.
   2018-05-30 15h56.05.6320285 i | | | | | | | | | < 
   2018-05-30 15h56.05.6320285 i | | | | | | | | | > Settling []db^CK.sUserOidcUCL.
   2018-05-30 15h56.05.6320285 i | | | | | | | | | < 
   2018-05-30 15h56.05.6320285 i | | | | | | | | | > Settling []db^CK.sUserPasswordDestroy.
   2018-05-30 15h56.05.6325274 i | | | | | | | | | < 
   2018-05-30 15h56.05.6325274 i | | | | | | | | | > Settling []db^CK.sUserPasswordUCL.
   2018-05-30 15h56.05.6325274 i | | | | | | | | | < 
   2018-05-30 15h56.05.6325274 i | | | | | | | | | > Settling []db^CK.UserGoogleTable([]db^CK.sUserDestroy).
   2018-05-30 15h56.05.6325274 i | | | | | | | | | < 
   2018-05-30 15h56.05.6325274 i | | | | | | | | | > Settling []db^CK.UserOidcTable([]db^CK.sUserDestroy).
   2018-05-30 15h56.05.6325274 i | | | | | | | | | < 
   2018-05-30 15h56.05.6325274 i | | | | | | | | | > Settling []db^CK.UserPasswordTable([]db^CK.sUserDestroy).
   2018-05-30 15h56.05.6325274 i | | | | | | | | | < 
   2018-05-30 15h56.05.6325274 i | | | | | | | | | > Settling []db^CK.vUserAuthProvider#transform.
   2018-05-30 15h56.05.6330268 i | | | | | | | | | < 
   2018-05-30 15h56.05.6330268 i | | | | | | | | | > Settling []db^CK.sUserDestroy#transform.
   2018-05-30 15h56.05.6330268 i | | | | | | | | | < 
   2018-05-30 15h56.05.6330268 i | | | | | | | | | > Settling []db^CK.UserGoogleTable.
   2018-05-30 15h56.05.6330268 i | | | | | | | | | < 
   2018-05-30 15h56.05.6330268 i | | | | | | | | | > Settling []db^CK.UserOidcTable.
   2018-05-30 15h56.05.6330268 i | | | | | | | | | < 
   2018-05-30 15h56.05.6330268 i | | | | | | | | | > Settling []db^CK.UserPasswordTable.
   2018-05-30 15h56.05.6330268 i | | | | | | | | | < 
   2018-05-30 15h56.05.6330268 i | | | | | | | | | > Settling []db^CK.DB.User.UserGoogle.Package.
   2018-05-30 15h56.05.6335257 i | | | | | | | | | < 
   2018-05-30 15h56.05.6335257 i | | | | | | | | | > Settling []db^CK.DB.User.UserOidc.Package.
   2018-05-30 15h56.05.6335257 i | | | | | | | | | < 
   2018-05-30 15h56.05.6335257 i | | | | | | | | | > Settling []db^CK.DB.User.UserPassword.Package.
   2018-05-30 15h56.05.6335257 i | | | | | | | | | < 
   2018-05-30 15h56.05.6335257 i | | | | | | | | | > Settling []db^SqlDatabase.
   2018-05-30 15h56.05.6335257 i | | | | | | | | | < 
   2018-05-30 15h56.05.6335257   | | | | | | | | | > Raising Success setup event.
   2018-05-30 15h56.05.6335257   | | | | | | | | | < 
   2018-05-30 15h56.05.6340250 i | | | | | | | | < 
   2018-05-30 15h56.05.6360215 i | | | | | | | | > Disposing 88 drivers.
   2018-05-30 15h56.05.6360215 i | | | | | | | | < 
   2018-05-30 15h56.05.6360215   | | | | | | | | > Raising Disposed setup event.
   2018-05-30 15h56.05.6370194   | | | | | | | | < 
   2018-05-30 15h56.05.6405135 i | | | | | | | < 
   2018-05-30 15h56.05.6405135 i | | | | | | | > Aspect: CK.SqlServer.Setup.SqlSetupAspect.
   2018-05-30 15h56.05.6405135 i | | | | | | | < 
   2018-05-30 15h56.05.6410119 i | | | | | | | > Executing initial 0 deferred actions.
   2018-05-30 15h56.05.6410119 i | | | | | | | <  | 1 conclusion:
                                 | | | | | | |    | Executed 0 actions.
   2018-05-30 15h56.05.6410119 i | | | | | | < 
   2018-05-30 15h56.05.6445056 i | | | | | | > Generating AppContext assembly (first run).
   2018-05-30 15h56.05.6470010 i | | | | | | | > Generating StObj dynamic assembly.
   2018-05-30 15h56.05.6609757 i | | | | | | | | > Generating source code.
   2018-05-30 15h56.05.7408258 i | | | | | | | | | > Generating Method GroupTable.CreateGroupAsync( ISqlCallContext ctx, Int32 actorId ) => Task`1.
   2018-05-30 15h56.05.7473152   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sGroupCreate(@ActorId int, @GroupIdResult int output)'.
   2018-05-30 15h56.05.7642837   | | | | | | | | | | < 
   2018-05-30 15h56.05.8246855 i | | | | | | | | | < 
   2018-05-30 15h56.05.8246855 i | | | | | | | | | > Generating Method GroupTable.DestroyGroupAsync( ISqlCallContext ctx, Int32 actorId, Int32 groupId, Boolean forceDestroy = False ) => Task.
   2018-05-30 15h56.05.8251697   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sGroupDestroy(@ActorId int, @GroupId int, @ForceDestroy bit=0)'.
   2018-05-30 15h56.05.8251697   | | | | | | | | | | < 
   2018-05-30 15h56.05.8256838 i | | | | | | | | | < 
   2018-05-30 15h56.05.8256838 i | | | | | | | | | > Generating Method GroupTable.AddUserAsync( ISqlCallContext ctx, Int32 actorId, Int32 groupId, Int32 userId ) => Task.
   2018-05-30 15h56.05.8256838   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sGroupUserAdd(@ActorId int, @GroupId int, @UserId int)'.
   2018-05-30 15h56.05.8261680   | | | | | | | | | | < 
   2018-05-30 15h56.05.8261680 i | | | | | | | | | < 
   2018-05-30 15h56.05.8261680 i | | | | | | | | | > Generating Method GroupTable.RemoveUserAsync( ISqlCallContext ctx, Int32 actorId, Int32 groupId, Int32 userId ) => Task.
   2018-05-30 15h56.05.8261680   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sGroupUserRemove(@ActorId int, @GroupId int, @UserId int)'.
   2018-05-30 15h56.05.8261680   | | | | | | | | | | < 
   2018-05-30 15h56.05.8266669 i | | | | | | | | | < 
   2018-05-30 15h56.05.8266669 i | | | | | | | | | > Generating Method GroupTable.RemoveAllUsersAsync( ISqlCallContext ctx, Int32 actorId, Int32 groupId ) => Task.
   2018-05-30 15h56.05.8266669   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sGroupRemoveAllUsers(@ActorId int, @GroupId int)'.
   2018-05-30 15h56.05.8266669   | | | | | | | | | | < 
   2018-05-30 15h56.05.8266669 i | | | | | | | | | < 
   2018-05-30 15h56.05.8266669 i | | | | | | | | | > Generating Method GroupTable.CreateGroup( ISqlCallContext ctx, Int32 actorId ) => Int32.
   2018-05-30 15h56.05.8281645 i | | | | | | | | | < 
   2018-05-30 15h56.05.8281645 i | | | | | | | | | > Generating Method GroupTable.DestroyGroup( ISqlCallContext ctx, Int32 actorId, Int32 groupId, Boolean forceDestroy = False ).
   2018-05-30 15h56.05.8281645 i | | | | | | | | | < 
   2018-05-30 15h56.05.8281645 i | | | | | | | | | > Generating Method GroupTable.AddUser( ISqlCallContext ctx, Int32 actorId, Int32 groupId, Int32 userId ).
   2018-05-30 15h56.05.8286634 i | | | | | | | | | < 
   2018-05-30 15h56.05.8286634 i | | | | | | | | | > Generating Method GroupTable.RemoveUser( ISqlCallContext ctx, Int32 actorId, Int32 groupId, Int32 userId ).
   2018-05-30 15h56.05.8286634 i | | | | | | | | | < 
   2018-05-30 15h56.05.8286634 i | | | | | | | | | > Generating Method GroupTable.RemoveAllUsers( ISqlCallContext ctx, Int32 actorId, Int32 groupId ).
   2018-05-30 15h56.05.8286634 i | | | | | | | | | < 
   2018-05-30 15h56.05.8286634 i | | | | | | | | | > Generating Method UserTable.CreateUserAsync( ISqlCallContext ctx, Int32 actorId, String userName ) => Task`1.
   2018-05-30 15h56.05.8291623   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserCreate(@ActorId int, @UserName nvarchar(255), @UserIdResult int output)'.
   2018-05-30 15h56.05.8296616   | | | | | | | | | | < 
   2018-05-30 15h56.05.8301605 i | | | | | | | | | < 
   2018-05-30 15h56.05.8301605 i | | | | | | | | | > Generating Method UserTable.UserNameSetAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId, String userName ) => Task`1.
   2018-05-30 15h56.05.8301605   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserUserNameSet(@ActorId int, @UserId int, @UserName nvarchar(127), @Done bit output)'.
   2018-05-30 15h56.05.8306594   | | | | | | | | | | < 
   2018-05-30 15h56.05.8306594 i | | | | | | | | | < 
   2018-05-30 15h56.05.8306594 i | | | | | | | | | > Generating Method UserTable.DestroyUserAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId ) => Task.
   2018-05-30 15h56.05.8306594   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserDestroy(@ActorId int, @UserId int)'.
   2018-05-30 15h56.05.8306594   | | | | | | | | | | < 
   2018-05-30 15h56.05.8311588 i | | | | | | | | | < 
   2018-05-30 15h56.05.8311588 i | | | | | | | | | > Generating Method UserTable.RemoveFromAllGroupsAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId ) => Task.
   2018-05-30 15h56.05.8311588   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserRemoveFromAllGroups(@ActorId int, @UserId int)'.
   2018-05-30 15h56.05.8311588   | | | | | | | | | | < 
   2018-05-30 15h56.05.8311588 i | | | | | | | | | < 
   2018-05-30 15h56.05.8311588 i | | | | | | | | | > Generating Method UserTable.CreateUser( ISqlCallContext ctx, Int32 actorId, String userName ) => Int32.
   2018-05-30 15h56.05.8316577 i | | | | | | | | | < 
   2018-05-30 15h56.05.8316577 i | | | | | | | | | > Generating Method UserTable.UserNameSet( ISqlCallContext ctx, Int32 actorId, Int32 userId, String userName ) => Boolean.
   2018-05-30 15h56.05.8316577 i | | | | | | | | | < 
   2018-05-30 15h56.05.8316577 i | | | | | | | | | > Generating Method UserTable.DestroyUser( ISqlCallContext ctx, Int32 actorId, Int32 userId ).
   2018-05-30 15h56.05.8316577 i | | | | | | | | | < 
   2018-05-30 15h56.05.8316577 i | | | | | | | | | > Generating Method UserTable.RemoveFromAllGroups( ISqlCallContext ctx, Int32 actorId, Int32 userId ).
   2018-05-30 15h56.05.8321570 i | | | | | | | | | < 
   2018-05-30 15h56.05.8321570 i | | | | | | | | | > Generating Method Package.CmdReadUserAuthInfo( Int32 actorId, Int32 userId ) => SqlCommand.
   2018-05-30 15h56.05.8321570   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sAuthUserInfoRead(@ActorId int, @UserId int)'.
   2018-05-30 15h56.05.8321570   | | | | | | | | | | < 
   2018-05-30 15h56.05.8326560 i | | | | | | | | | < 
   2018-05-30 15h56.05.8326560 i | | | | | | | | | > Generating Method Package.OnUserLoginAsync( ISqlCallContext ctx, String scheme, DateTime lastLoginTime, Int32 userId, Boolean actualLogin, DateTime loginTimeNow ) => Task`1.
   2018-05-30 15h56.05.8326560   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sAuthUserOnLogin(@Scheme varchar(64), @LastLoginTime datetime2(2), @UserId int, @ActualLogin bit, @LoginTimeNow datetime2(2), @FailureCode int output, @FailureReason nvarchar(255) output)'.
   2018-05-30 15h56.05.8331544   | | | | | | | | | | < 
   2018-05-30 15h56.05.8506384 i | | | | | | | | | < 
   2018-05-30 15h56.05.8511239 i | | | | | | | | | > Generating Method Package.OnUserLogin( ISqlCallContext ctx, String scheme, DateTime lastLoginTime, Int32 userId, Boolean actualLogin, DateTime loginTimeNow ) => LoginResult.
   2018-05-30 15h56.05.8511239 i | | | | | | | | | < 
   2018-05-30 15h56.05.8511239 i | | | | | | | | | > Generating Method AuthProviderTable.RegisterProviderAsync( ISqlCallContext ctx, Int32 actorId, String providerName, String userProviderSchemaTableName, Boolean isMultiScheme ) => Task`1.
   2018-05-30 15h56.05.8516210   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sAuthProviderRegister(@ActorId int, @ProviderName varchar(64), @UserProviderSchemaTableName nvarchar(128), @IsMultiScheme bit, @AuthProviderIdResult int output)'.
   2018-05-30 15h56.05.8516210   | | | | | | | | | | < 
   2018-05-30 15h56.05.8516210 i | | | | | | | | | < 
   2018-05-30 15h56.05.8516210 i | | | | | | | | | > Generating Method AuthProviderTable.RegisterProvider( ISqlCallContext ctx, Int32 actorId, String providerName, String userProviderSchemaTableName, Boolean isMultiScheme ) => Int32.
   2018-05-30 15h56.05.8516210 i | | | | | | | | | < 
   2018-05-30 15h56.05.8521199 i | | | | | | | | | > Generating Method UserGoogleTable.DestroyGoogleUserAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId, CancellationToken cancellationToken = null ) => Task.
   2018-05-30 15h56.05.8521199   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserGoogleDestroy(@ActorId int, @UserId int)'.
   2018-05-30 15h56.05.8521199   | | | | | | | | | | < 
   2018-05-30 15h56.05.8521199 i | | | | | | | | | < 
   2018-05-30 15h56.05.8521199 i | | | | | | | | | > Generating Method UserGoogleTable.GoogleUserUCLAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId, IUserGoogleInfo info, UCLMode mode, CancellationToken cancellationToken ) => Task`1.
   2018-05-30 15h56.05.8526202   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserGoogleUCL(@ActorId int, @UserId int /*input*/output, @GoogleAccountId varchar(36), @Mode int, @UCResult int output, @LoginFailureCode int output, @LoginFailureReason nvarchar(255) output)'.
   2018-05-30 15h56.05.8526202   | | | | | | | | | | < 
   2018-05-30 15h56.05.8546301 i | | | | | | | | | | Sql Parameter '@GoogleAccountId varchar(36)' will take its value from the [ParameterSource] 'info.GoogleAccountId' property.
   2018-05-30 15h56.05.8556283 i | | | | | | | | | < 
   2018-05-30 15h56.05.8556283 i | | | | | | | | | > Generating Method UserGoogleTable.DestroyGoogleUser( ISqlCallContext ctx, Int32 actorId, Int32 userId ).
   2018-05-30 15h56.05.8556283 i | | | | | | | | | < 
   2018-05-30 15h56.05.8556283 i | | | | | | | | | > Generating Method UserGoogleTable.UserGoogleUCL( ISqlCallContext ctx, Int32 actorId, Int32 userId, IUserGoogleInfo info, UCLMode mode ) => UCLResult.
   2018-05-30 15h56.05.8556283 i | | | | | | | | | | Sql Parameter '@GoogleAccountId varchar(36)' will take its value from the [ParameterSource] 'info.GoogleAccountId' property.
   2018-05-30 15h56.05.8556283 i | | | | | | | | | < 
   2018-05-30 15h56.05.8561125 i | | | | | | | | | > Generating Method UserOidcTable.DestroyOidcUserAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId, String schemeSuffix, CancellationToken cancellationToken = null ) => Task.
   2018-05-30 15h56.05.8561125   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserOidcDestroy(@ActorId int, @UserId int, @SchemeSuffix varchar(64))'.
   2018-05-30 15h56.05.8561125   | | | | | | | | | | < 
   2018-05-30 15h56.05.8561125 i | | | | | | | | | < 
   2018-05-30 15h56.05.8561125 i | | | | | | | | | > Generating Method UserOidcTable.UserOidcULC( ISqlCallContext ctx, Int32 actorId, Int32 userId, IUserOidcInfo info, UCLMode mode, CancellationToken cancellationToken ) => Task`1.
   2018-05-30 15h56.05.8566141   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserOidcUCL(@ActorId int, @UserId int /*input*/output, @SchemeSuffix varchar(64), @Sub nvarchar(64), @Mode int, @UCResult int output, @LoginFailureCode int output, @LoginFailureReason nvarchar(255) output)'.
   2018-05-30 15h56.05.8566141   | | | | | | | | | | < 
   2018-05-30 15h56.05.8566141 i | | | | | | | | | | Sql Parameter '@SchemeSuffix varchar(64)' will take its value from the [ParameterSource] 'info.SchemeSuffix' property.
   2018-05-30 15h56.05.8566141 i | | | | | | | | | | Sql Parameter '@Sub nvarchar(64)' will take its value from the [ParameterSource] 'info.Sub' property.
   2018-05-30 15h56.05.8571121 i | | | | | | | | | < 
   2018-05-30 15h56.05.8571121 i | | | | | | | | | > Generating Method UserOidcTable.DestroyOidcUser( ISqlCallContext ctx, Int32 actorId, Int32 userId, String schemeSuffix ).
   2018-05-30 15h56.05.8571121 i | | | | | | | | | < 
   2018-05-30 15h56.05.8571121 i | | | | | | | | | > Generating Method UserOidcTable.UserOidcUCL( ISqlCallContext ctx, Int32 actorId, Int32 userId, IUserOidcInfo info, UCLMode mode ) => UCLResult.
   2018-05-30 15h56.05.8571121 i | | | | | | | | | | Sql Parameter '@SchemeSuffix varchar(64)' will take its value from the [ParameterSource] 'info.SchemeSuffix' property.
   2018-05-30 15h56.05.8571121 i | | | | | | | | | | Sql Parameter '@Sub nvarchar(64)' will take its value from the [ParameterSource] 'info.Sub' property.
   2018-05-30 15h56.05.8576092 i | | | | | | | | | < 
   2018-05-30 15h56.05.8576092 i | | | | | | | | | > Generating Method UserPasswordTable.DestroyPasswordUserAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId, CancellationToken cancellationToken = null ) => Task.
   2018-05-30 15h56.05.8576092   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserPasswordDestroy(@ActorId int, @UserId int)'.
   2018-05-30 15h56.05.8576092   | | | | | | | | | | < 
   2018-05-30 15h56.05.8576092 i | | | | | | | | | < 
   2018-05-30 15h56.05.8576092 i | | | | | | | | | > Generating Method UserPasswordTable.PasswordUserUCLAsync( ISqlCallContext ctx, Int32 actorId, Int32 userId, Byte[] pwdHash, UCLMode mode, Nullable`1 loginFailureCode = null, CancellationToken cancellationToken = null ) => Task`1.
   2018-05-30 15h56.05.8576092   | | | | | | | | | | > Low level SqlCommand create method for: 'procedure CK.sUserPasswordUCL(@ActorId int, @UserId int /*input*/output, @PwdHash varbinary(64), @Mode int, @UCResult int output, @LoginFailureCode int /*input*/output, @LoginFailureReason nvarchar(255) output)'.
   2018-05-30 15h56.05.8576092   | | | | | | | | | | < 
   2018-05-30 15h56.05.8581081 i | | | | | | | | | < 
   2018-05-30 15h56.05.8581081 i | | | | | | | | | > Generating Method UserPasswordTable.DestroyPasswordUser( ISqlCallContext ctx, Int32 actorId, Int32 userId ).
   2018-05-30 15h56.05.8581081 i | | | | | | | | | < 
   2018-05-30 15h56.05.8581081 i | | | | | | | | | > Generating Method UserPasswordTable.PasswordUserUCL( ISqlCallContext ctx, Int32 actorId, Int32 userId, Byte[] pwdHash, UCLMode mode, Nullable`1 loginFailureCode ) => UCLResult.
   2018-05-30 15h56.05.8581081 i | | | | | | | | | < 
   2018-05-30 15h56.05.8792455 i | | | | | | | | < 
   2018-05-30 15h56.05.8792455 i | | | | | | | | > Compiling source code.
   2018-05-30 15h56.12.9838213 i | | | | | | | | | Saved source file: C:\Users\olivi\AppData\Local\Temp\CKSetup2018-05-30 15h55.58.2379462\CK.StObj.AutoAssembly.dll.0.cs
   2018-05-30 15h56.12.9908078 i | | | | | | | | | Saved source file: C:\Users\olivi\AppData\Local\Temp\CKSetup2018-05-30 15h55.58.2379462\CK.StObj.AutoAssembly.dll.1.cs
   2018-05-30 15h56.12.9962975 i | | | | | | | | | > Code Generation information.
   2018-05-30 15h56.12.9967973 W | | | | | | | | | | > 1 assembly load conflict(s).
   2018-05-30 15h56.12.9982940 W | | | | | | | | | | | Sucess: 'System.Collections.Immutable, Version=1.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' => 'System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' (no requesting assembly)
   2018-05-30 15h56.12.9982940 W | | | | | | | | | | < 
   2018-05-30 15h56.12.9987934 i | | | | | | | | | | Source code generation and compilation succeeded.
   2018-05-30 15h56.13.0007899 i | | | | | | | | | <  | 1 conclusion:
                                 | | | | | | | | |    | Succeeded.
   2018-05-30 15h56.13.0007899 i | | | | | | | | < 
   2018-05-30 15h56.13.0007899 i | | | | | | | < 
   2018-05-30 15h56.13.0107724 i | | | | | | | > Copying generated files to folder: 'C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461\'.
   2018-05-30 15h56.13.0107724 i | | | | | | | | CK.StObj.AutoAssembly.dll.0.cs
   2018-05-30 15h56.13.0706619 i | | | | | | | | CK.StObj.AutoAssembly.dll.1.cs
   2018-05-30 15h56.13.0876278 i | | | | | | | | CK.StObj.AutoAssembly.dll
   2018-05-30 15h56.13.1455208 i | | | | | | | < 
   2018-05-30 15h56.13.1460193 i | | | | | | | > Copying generated files to folder: 'C:\Dev\CK-AspNet-Projects\CK-AspNet-Auth\Tests\Integration\WebApp.Tests\bin\Debug\net461'.
   2018-05-30 15h56.13.1460193 i | | | | | | | | CK.StObj.AutoAssembly.dll.0.cs
   2018-05-30 15h56.13.1495129 i | | | | | | | | CK.StObj.AutoAssembly.dll.1.cs
   2018-05-30 15h56.13.1535051 i | | | | | | | | CK.StObj.AutoAssembly.dll
   2018-05-30 15h56.13.1564998 i | | | | | | | < 
   2018-05-30 15h56.13.1569992 i | | | | | | < 
   2018-05-30 15h56.13.1639852 i | | | | | | > Terminating Aspects.
   2018-05-30 15h56.13.1644841 i | | | | | | | > Aspect: CK.SqlServer.Setup.SqlSetupAspect.
   2018-05-30 15h56.13.1644841 i | | | | | | | < 
   2018-05-30 15h56.13.1644841 i | | | | | | | > Aspect: CK.Setup.SetupableAspect.
   2018-05-30 15h56.13.1936821 i | | | | | | | < 
   2018-05-30 15h56.13.1936821 i | | | | | | | > Executing initial 0 deferred actions.
   2018-05-30 15h56.13.1936821 i | | | | | | | <  | 1 conclusion:
                                 | | | | | | |    | Executed 0 actions.
   2018-05-30 15h56.13.1936821 i | | | | | | < 
   2018-05-30 15h56.13.1976733 W | | | | | | > 2 assembly load conflicts:
   2018-05-30 15h56.13.1981731 W | | | | | | | Sucess: 'System.Collections.Immutable, Version=1.2.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' => 'System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' (no requesting assembly)
   2018-05-30 15h56.13.1986711 W | | | | | | | Sucess: 'System.Collections.Immutable, Version=1.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' => 'System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' (no requesting assembly)
   2018-05-30 15h56.13.1986711 W | | | | | | < 
   2018-05-30 15h56.13.8070405 i | | | | | < 
   2018-05-30 15h56.13.8070405   | | | | < 
   2018-05-30 15h56.13.8085367 i | | | < 
   2018-05-30 15h56.13.8095354   | | | > Updating signature files.
   2018-05-30 15h56.13.8125302   | | | < 
   2018-05-30 15h56.13.8145263 i | | | > Deleting temporary Working Directory.
   2018-05-30 15h56.13.9250100 i | | | < 
   2018-05-30 15h56.13.9250100 i | | <  | 1 conclusion:
                                 | |    | Succeed
   2018-05-30 15h56.13.9280069 i | | > Closing Store.
   2018-05-30 15h56.13.9290065 i | | < 
   2018-05-30 15h56.13.9290065 i | | > Closing Store.
   2018-05-30 15h56.13.9290065 i | | < 
   2018-05-30 15h56.13.9290065 i | < 
   2018-05-30 15h56.13.9290065 i < 
